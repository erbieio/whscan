{
	"id": "49da4e11051a3541516827bb3436b9e6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/tokens/ERBPay.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract ERBPay is Ownable{\r\n    uint256 yearFee=200*1e18;\r\n    uint256 otherFee=100*1e18;\r\n    address public yearFeeAddress=0x10CEc672c6BB2f6782BEED65987E020902B7bD15;\r\n    address public otherFeeAddress=0xEbE809C70406Fc07e70Bc2c590bC7Dd9Ba9272Ac;\r\n    mapping(address=>uint256)public endTime;\r\n    event PayForOpenExchange(address indexed sender, uint256 amount);\r\n    event PayForOpenRenew(address indexed sender, uint256 amount);\r\n    constructor () {\r\n    }\r\n\r\n    function setYearFee(uint256 amount) external onlyOwner{\r\n        yearFee=amount;\r\n    }\r\n\r\n    function setOtherFee(uint256 amount) external onlyOwner{\r\n        otherFee=amount;\r\n    }\r\n\r\n    function setYearFeeAddress(address _addr) external onlyOwner{\r\n        yearFeeAddress=_addr;\r\n    }\r\n\r\n    function payForRenew()external payable{\r\n       require(msg.value == yearFee,\"msg.value invalid\");\r\n       payable(yearFeeAddress).transfer(yearFee);\r\n       endTime[msg.sender]=endTime[msg.sender]+86400*365;\r\n       emit PayForOpenRenew(msg.sender,msg.value);\r\n    }\r\n\r\n    //0 no exchange 1 no fee  2 normal\r\n    function checkAuth(address addr)view public returns(uint256){\r\n        if(endTime[addr]==0){\r\n           return 0;\r\n        }else if(endTime[addr]<block.timestamp){\r\n           return 1;\r\n        }\r\n        return 2;\r\n    }\r\n    \r\n    fallback() payable external {}\r\n    receive() payable external {}\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/tokens/ERBPay.sol": {
				"ERBPay": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PayForOpenExchange",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PayForOpenRenew",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "checkAuth",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "endTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "otherFeeAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "payForRenew",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "setOtherFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "setYearFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "setYearFeeAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "yearFeeAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/tokens/ERBPay.sol\":114:1502  contract ERBPay is Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/tokens/ERBPay.sol\":163:171  200*1e18 */\n  0x0ad78ebc5ac6200000\n    /* \"contracts/tokens/ERBPay.sol\":147:171  uint256 yearFee=200*1e18 */\n  0x01\n  sstore\n    /* \"contracts/tokens/ERBPay.sol\":195:203  100*1e18 */\n  0x056bc75e2d63100000\n    /* \"contracts/tokens/ERBPay.sol\":178:203  uint256 otherFee=100*1e18 */\n  0x02\n  sstore\n    /* \"contracts/tokens/ERBPay.sol\":210:282  address public yearFeeAddress=0x10CEc672c6BB2f6782BEED65987E020902B7bD15 */\n  0x03\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n    /* \"contracts/tokens/ERBPay.sol\":240:282  0x10CEc672c6BB2f6782BEED65987E020902B7bD15 */\n  0x10cec672c6bb2f6782beed65987e020902b7bd15\n    /* \"contracts/tokens/ERBPay.sol\":210:282  address public yearFeeAddress=0x10CEc672c6BB2f6782BEED65987E020902B7bD15 */\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/tokens/ERBPay.sol\":289:362  address public otherFeeAddress=0xEbE809C70406Fc07e70Bc2c590bC7Dd9Ba9272Ac */\n  0x04\n  dup1\n  sload\n  swap1\n  swap2\n  and\n    /* \"contracts/tokens/ERBPay.sol\":320:362  0xEbE809C70406Fc07e70Bc2c590bC7Dd9Ba9272Ac */\n  0xebe809c70406fc07e70bc2c590bc7dd9ba9272ac\n    /* \"contracts/tokens/ERBPay.sol\":289:362  address public otherFeeAddress=0xEbE809C70406Fc07e70Bc2c590bC7Dd9Ba9272Ac */\n  or\n  swap1\n  sstore\n    /* \"contracts/tokens/ERBPay.sol\":554:577  constructor () {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_5:\n    /* \"contracts/tokens/ERBPay.sol\":114:1502  contract ERBPay is Ownable{... */\n  jump(tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/tokens/ERBPay.sol\":114:1502  contract ERBPay is Ownable{... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/tokens/ERBPay.sol\":114:1502  contract ERBPay is Ownable{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7ad3c93a\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x7ad3c93a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8b68e1fa\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xaeb0bc79\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2c8609e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      stop\n    tag_14:\n      dup1\n      0x366a8508\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4aefdccd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4b165090\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x75a3aae7\n      eq\n      tag_7\n      jumpi\n      stop\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      stop\n        /* \"contracts/tokens/ERBPay.sol\":289:362  address public otherFeeAddress=0xEbE809C70406Fc07e70Bc2c590bC7Dd9Ba9272Ac */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      sload(0x04)\n      tag_20\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_20:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/tokens/ERBPay.sol\":289:362  address public otherFeeAddress=0xEbE809C70406Fc07e70Bc2c590bC7Dd9Ba9272Ac */\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokens/ERBPay.sol\":369:408  mapping(address=>uint256)public endTime */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":659:684   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":647:649   */\n      0x20\n        /* \"#utility.yul\":632:650   */\n      add\n        /* \"contracts/tokens/ERBPay.sol\":369:408  mapping(address=>uint256)public endTime */\n      tag_22\n        /* \"#utility.yul\":513:690   */\n      jump\n        /* \"contracts/tokens/ERBPay.sol\":1199:1422  function checkAuth(address addr)view public returns(uint256){... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_25\n      tag_33\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_2\n      tag_38\n      jump\t// in\n        /* \"contracts/tokens/ERBPay.sol\":210:282  address public yearFeeAddress=0x10CEc672c6BB2f6782BEED65987E020902B7bD15 */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      sload(0x03)\n      tag_20\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/tokens/ERBPay.sol\":777:876  function setYearFeeAddress(address _addr) external onlyOwner{... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_2\n      tag_45\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n        /* \"contracts/tokens/ERBPay.sol\":884:1151  function payForRenew()external payable{... */\n    tag_9:\n      tag_2\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      jump(tag_20)\n        /* \"contracts/tokens/ERBPay.sol\":680:769  function setOtherFee(uint256 amount) external onlyOwner{... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_2\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n        /* \"contracts/tokens/ERBPay.sol\":585:672  function setYearFee(uint256 amount) external onlyOwner{... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_2\n      tag_60\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_2\n      tag_64\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n        /* \"contracts/tokens/ERBPay.sol\":1199:1422  function checkAuth(address addr)view public returns(uint256){... */\n    tag_34:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/ERBPay.sol\":1273:1286  endTime[addr] */\n      dup2\n      and\n        /* \"contracts/tokens/ERBPay.sol\":1251:1258  uint256 */\n      0x00\n        /* \"contracts/tokens/ERBPay.sol\":1273:1286  endTime[addr] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/ERBPay.sol\":1273:1280  endTime */\n      0x05\n        /* \"contracts/tokens/ERBPay.sol\":1273:1286  endTime[addr] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/tokens/ERBPay.sol\":1273:1289  endTime[addr]==0 */\n      dup2\n      sub\n        /* \"contracts/tokens/ERBPay.sol\":1270:1396  if(endTime[addr]==0){... */\n      tag_67\n      jumpi\n      pop\n        /* \"contracts/tokens/ERBPay.sol\":1311:1312  0 */\n      0x00\n      swap2\n        /* \"contracts/tokens/ERBPay.sol\":1199:1422  function checkAuth(address addr)view public returns(uint256){... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/tokens/ERBPay.sol\":1270:1396  if(endTime[addr]==0){... */\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/ERBPay.sol\":1332:1345  endTime[addr] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/ERBPay.sol\":1332:1339  endTime */\n      0x05\n        /* \"contracts/tokens/ERBPay.sol\":1332:1345  endTime[addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/tokens/ERBPay.sol\":1346:1361  block.timestamp */\n      timestamp\n      gt\n        /* \"contracts/tokens/ERBPay.sol\":1329:1396  if(endTime[addr]<block.timestamp){... */\n      iszero\n      tag_69\n      jumpi\n      pop\n        /* \"contracts/tokens/ERBPay.sol\":1383:1384  1 */\n      0x01\n      swap2\n        /* \"contracts/tokens/ERBPay.sol\":1199:1422  function checkAuth(address addr)view public returns(uint256){... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/tokens/ERBPay.sol\":1329:1396  if(endTime[addr]<block.timestamp){... */\n    tag_69:\n      pop\n        /* \"contracts/tokens/ERBPay.sol\":1413:1414  2 */\n      0x02\n      swap2\n        /* \"contracts/tokens/ERBPay.sol\":1199:1422  function checkAuth(address addr)view public returns(uint256){... */\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/tokens/ERBPay.sol\":777:876  function setYearFeeAddress(address _addr) external onlyOwner{... */\n    tag_46:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_83\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_83:\n        /* \"contracts/tokens/ERBPay.sol\":848:862  yearFeeAddress */\n      0x03\n        /* \"contracts/tokens/ERBPay.sol\":848:868  yearFeeAddress=_addr */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/tokens/ERBPay.sol\":777:876  function setYearFeeAddress(address _addr) external onlyOwner{... */\n      jump\t// out\n        /* \"contracts/tokens/ERBPay.sol\":884:1151  function payForRenew()external payable{... */\n    tag_48:\n        /* \"contracts/tokens/ERBPay.sol\":953:960  yearFee */\n      sload(0x01)\n        /* \"contracts/tokens/ERBPay.sol\":940:949  msg.value */\n      callvalue\n        /* \"contracts/tokens/ERBPay.sol\":940:960  msg.value == yearFee */\n      eq\n        /* \"contracts/tokens/ERBPay.sol\":932:981  require(msg.value == yearFee,\"msg.value invalid\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1443:1445   */\n      0x20\n        /* \"contracts/tokens/ERBPay.sol\":932:981  require(msg.value == yearFee,\"msg.value invalid\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1425:1446   */\n      mstore\n        /* \"#utility.yul\":1482:1484   */\n      0x11\n        /* \"#utility.yul\":1462:1480   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1455:1485   */\n      mstore\n      shl(0x7a, 0x1b5cd9cb9d985b1d59481a5b9d985b1a59)\n        /* \"#utility.yul\":1501:1519   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1494:1541   */\n      mstore\n        /* \"#utility.yul\":1558:1576   */\n      0x64\n      add\n        /* \"contracts/tokens/ERBPay.sol\":932:981  require(msg.value == yearFee,\"msg.value invalid\") */\n      tag_75\n        /* \"#utility.yul\":1241:1582   */\n      jump\n        /* \"contracts/tokens/ERBPay.sol\":932:981  require(msg.value == yearFee,\"msg.value invalid\") */\n    tag_87:\n        /* \"contracts/tokens/ERBPay.sol\":999:1013  yearFeeAddress */\n      sload(0x03)\n      0x01\n        /* \"contracts/tokens/ERBPay.sol\":1024:1031  yearFee */\n      sload\n        /* \"contracts/tokens/ERBPay.sol\":991:1032  payable(yearFeeAddress).transfer(yearFee) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/ERBPay.sol\":999:1013  yearFeeAddress */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/tokens/ERBPay.sol\":991:1032  payable(yearFeeAddress).transfer(yearFee) */\n      dup2\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"contracts/tokens/ERBPay.sol\":1024:1031  yearFee */\n      swap1\n        /* \"contracts/tokens/ERBPay.sol\":999:1013  yearFeeAddress */\n      0x00\n        /* \"contracts/tokens/ERBPay.sol\":991:1032  payable(yearFeeAddress).transfer(yearFee) */\n      dup2\n        /* \"contracts/tokens/ERBPay.sol\":999:1013  yearFeeAddress */\n      dup2\n        /* \"contracts/tokens/ERBPay.sol\":991:1032  payable(yearFeeAddress).transfer(yearFee) */\n      dup2\n        /* \"contracts/tokens/ERBPay.sol\":1024:1031  yearFee */\n      dup6\n        /* \"contracts/tokens/ERBPay.sol\":999:1013  yearFeeAddress */\n      dup9\n        /* \"contracts/tokens/ERBPay.sol\":991:1032  payable(yearFeeAddress).transfer(yearFee) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_91:\n      pop\n        /* \"contracts/tokens/ERBPay.sol\":1070:1080  msg.sender */\n      caller\n        /* \"contracts/tokens/ERBPay.sol\":1062:1081  endTime[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/ERBPay.sol\":1062:1069  endTime */\n      0x05\n        /* \"contracts/tokens/ERBPay.sol\":1062:1081  endTime[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/tokens/ERBPay.sol\":1062:1091  endTime[msg.sender]+86400*365 */\n      tag_92\n      swap1\n        /* \"contracts/tokens/ERBPay.sol\":1082:1091  86400*365 */\n      0x01e13380\n        /* \"contracts/tokens/ERBPay.sol\":1062:1091  endTime[msg.sender]+86400*365 */\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"contracts/tokens/ERBPay.sol\":1050:1060  msg.sender */\n      caller\n        /* \"contracts/tokens/ERBPay.sol\":1042:1061  endTime[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/tokens/ERBPay.sol\":1042:1049  endTime */\n      0x05\n        /* \"contracts/tokens/ERBPay.sol\":1042:1061  endTime[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/tokens/ERBPay.sol\":1042:1091  endTime[msg.sender]=endTime[msg.sender]+86400*365 */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/tokens/ERBPay.sol\":1106:1143  PayForOpenRenew(msg.sender,msg.value) */\n      swap1\n      mload\n      0xe777ae9d65766408c351d743ed88284c7719883019e08000af32400646abcff8\n      swap1\n      tag_94\n      swap1\n        /* \"contracts/tokens/ERBPay.sol\":1133:1142  msg.value */\n      callvalue\n        /* \"#utility.yul\":659:684   */\n      dup2\n      mstore\n        /* \"#utility.yul\":647:649   */\n      0x20\n        /* \"#utility.yul\":632:650   */\n      add\n      swap1\n        /* \"#utility.yul\":513:690   */\n      jump\n        /* \"contracts/tokens/ERBPay.sol\":1106:1143  PayForOpenRenew(msg.sender,msg.value) */\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/tokens/ERBPay.sol\":884:1151  function payForRenew()external payable{... */\n      jump\t// out\n        /* \"contracts/tokens/ERBPay.sol\":680:769  function setOtherFee(uint256 amount) external onlyOwner{... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_99:\n        /* \"contracts/tokens/ERBPay.sol\":746:754  otherFee */\n      0x02\n        /* \"contracts/tokens/ERBPay.sol\":746:761  otherFee=amount */\n      sstore\n        /* \"contracts/tokens/ERBPay.sol\":680:769  function setOtherFee(uint256 amount) external onlyOwner{... */\n      jump\t// out\n        /* \"contracts/tokens/ERBPay.sol\":585:672  function setYearFee(uint256 amount) external onlyOwner{... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_105:\n        /* \"contracts/tokens/ERBPay.sol\":650:657  yearFee */\n      0x01\n        /* \"contracts/tokens/ERBPay.sol\":650:664  yearFee=amount */\n      sstore\n        /* \"contracts/tokens/ERBPay.sol\":585:672  function setYearFee(uint256 amount) external onlyOwner{... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2019:2021   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2001:2022   */\n      mstore\n        /* \"#utility.yul\":2058:2060   */\n      0x26\n        /* \"#utility.yul\":2038:2056   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2031:2061   */\n      mstore\n        /* \"#utility.yul\":2097:2131   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":2077:2095   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2070:2132   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":2148:2166   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2141:2177   */\n      mstore\n        /* \"#utility.yul\":2194:2213   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_75\n        /* \"#utility.yul\":1817:2219   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":222:508   */\n    tag_27:\n        /* \"#utility.yul\":281:287   */\n      0x00\n        /* \"#utility.yul\":334:336   */\n      0x20\n        /* \"#utility.yul\":322:331   */\n      dup3\n        /* \"#utility.yul\":313:320   */\n      dup5\n        /* \"#utility.yul\":309:332   */\n      sub\n        /* \"#utility.yul\":305:337   */\n      slt\n        /* \"#utility.yul\":302:354   */\n      iszero\n      tag_123\n      jumpi\n        /* \"#utility.yul\":350:351   */\n      0x00\n        /* \"#utility.yul\":347:348   */\n      dup1\n        /* \"#utility.yul\":340:352   */\n      revert\n        /* \"#utility.yul\":302:354   */\n    tag_123:\n        /* \"#utility.yul\":376:399   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":428:459   */\n      dup2\n      and\n        /* \"#utility.yul\":418:460   */\n      dup2\n      eq\n        /* \"#utility.yul\":408:478   */\n      tag_124\n      jumpi\n        /* \"#utility.yul\":474:475   */\n      0x00\n        /* \"#utility.yul\":471:472   */\n      dup1\n        /* \"#utility.yul\":464:476   */\n      revert\n        /* \"#utility.yul\":408:478   */\n    tag_124:\n        /* \"#utility.yul\":497:502   */\n      swap4\n        /* \"#utility.yul\":222:508   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":695:875   */\n    tag_56:\n        /* \"#utility.yul\":754:760   */\n      0x00\n        /* \"#utility.yul\":807:809   */\n      0x20\n        /* \"#utility.yul\":795:804   */\n      dup3\n        /* \"#utility.yul\":786:793   */\n      dup5\n        /* \"#utility.yul\":782:805   */\n      sub\n        /* \"#utility.yul\":778:810   */\n      slt\n        /* \"#utility.yul\":775:827   */\n      iszero\n      tag_127\n      jumpi\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":820:821   */\n      dup1\n        /* \"#utility.yul\":813:825   */\n      revert\n        /* \"#utility.yul\":775:827   */\n    tag_127:\n      pop\n        /* \"#utility.yul\":846:869   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":695:875   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":880:1236   */\n    tag_76:\n        /* \"#utility.yul\":1082:1084   */\n      0x20\n        /* \"#utility.yul\":1064:1085   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1101:1119   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":1094:1124   */\n      mstore\n        /* \"#utility.yul\":1160:1194   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":1155:1157   */\n      0x40\n        /* \"#utility.yul\":1140:1158   */\n      dup3\n      add\n        /* \"#utility.yul\":1133:1195   */\n      mstore\n        /* \"#utility.yul\":1227:1229   */\n      0x60\n        /* \"#utility.yul\":1212:1230   */\n      add\n      swap1\n        /* \"#utility.yul\":880:1236   */\n      jump\t// out\n        /* \"#utility.yul\":1587:1812   */\n    tag_93:\n        /* \"#utility.yul\":1627:1630   */\n      0x00\n        /* \"#utility.yul\":1658:1659   */\n      dup3\n        /* \"#utility.yul\":1654:1660   */\n      not\n        /* \"#utility.yul\":1651:1652   */\n      dup3\n        /* \"#utility.yul\":1648:1661   */\n      gt\n        /* \"#utility.yul\":1645:1781   */\n      iszero\n      tag_131\n      jumpi\n        /* \"#utility.yul\":1703:1713   */\n      0x4e487b71\n        /* \"#utility.yul\":1698:1701   */\n      0xe0\n        /* \"#utility.yul\":1694:1714   */\n      shl\n        /* \"#utility.yul\":1691:1692   */\n      0x00\n        /* \"#utility.yul\":1684:1715   */\n      mstore\n        /* \"#utility.yul\":1738:1742   */\n      0x11\n        /* \"#utility.yul\":1735:1736   */\n      0x04\n        /* \"#utility.yul\":1728:1743   */\n      mstore\n        /* \"#utility.yul\":1766:1770   */\n      0x24\n        /* \"#utility.yul\":1763:1764   */\n      0x00\n        /* \"#utility.yul\":1756:1771   */\n      revert\n        /* \"#utility.yul\":1645:1781   */\n    tag_131:\n      pop\n        /* \"#utility.yul\":1797:1806   */\n      add\n      swap1\n        /* \"#utility.yul\":1587:1812   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220eb5afb386f74d9790e20cbab83fd8a72c792e299e4f4e560d9780d933a0cfecb64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_167": {
									"entryPoint": null,
									"id": 167,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": null,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 129,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052680ad78ebc5ac620000060015568056bc75e2d63100000600255600380546001600160a01b03199081167310cec672c6bb2f6782beed65987e020902b7bd15179091556004805490911673ebe809c70406fc07e70bc2c590bc7dd9ba9272ac17905534801561007257600080fd5b5061007c33610081565b6100d1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61060b806100e06000396000f3fe60806040526004361061009a5760003560e01c80637ad3c93a116100615780637ad3c93a146101705780638b68e1fa146101905780638da5cb5b14610198578063aeb0bc79146101b6578063f2c8609e146101d6578063f2fde38b146101f657005b8063366a8508146100a35780634aefdccd146100e05780634b1650901461011b578063715018a61461013b57806375a3aae71461015057005b366100a157005b005b3480156100af57600080fd5b506004546100c3906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100ec57600080fd5b5061010d6100fb366004610531565b60056020526000908152604090205481565b6040519081526020016100d7565b34801561012757600080fd5b5061010d610136366004610531565b610216565b34801561014757600080fd5b506100a161026d565b34801561015c57600080fd5b506003546100c3906001600160a01b031681565b34801561017c57600080fd5b506100a161018b366004610531565b6102ac565b6100a16102f8565b3480156101a457600080fd5b506000546001600160a01b03166100c3565b3480156101c257600080fd5b506100a16101d1366004610561565b6103e8565b3480156101e257600080fd5b506100a16101f1366004610561565b610417565b34801561020257600080fd5b506100a1610211366004610531565b610446565b6001600160a01b038116600090815260056020526040812054810361023d57506000919050565b6001600160a01b03821660009081526005602052604090205442111561026557506001919050565b506002919050565b6000546001600160a01b031633146102a05760405162461bcd60e51b81526004016102979061057a565b60405180910390fd5b6102aa60006104e1565b565b6000546001600160a01b031633146102d65760405162461bcd60e51b81526004016102979061057a565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600154341461033d5760405162461bcd60e51b81526020600482015260116024820152701b5cd9cb9d985b1d59481a5b9d985b1a59607a1b6044820152606401610297565b6003546001546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610379573d6000803e3d6000fd5b5033600090815260056020526040902054610398906301e133806105af565b33600081815260056020526040908190209290925590517fe777ae9d65766408c351d743ed88284c7719883019e08000af32400646abcff8906103de9034815260200190565b60405180910390a2565b6000546001600160a01b031633146104125760405162461bcd60e51b81526004016102979061057a565b600255565b6000546001600160a01b031633146104415760405162461bcd60e51b81526004016102979061057a565b600155565b6000546001600160a01b031633146104705760405162461bcd60e51b81526004016102979061057a565b6001600160a01b0381166104d55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610297565b6104de816104e1565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561054357600080fd5b81356001600160a01b038116811461055a57600080fd5b9392505050565b60006020828403121561057357600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156105d057634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220eb5afb386f74d9790e20cbab83fd8a72c792e299e4f4e560d9780d933a0cfecb64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH9 0xAD78EBC5AC6200000 PUSH1 0x1 SSTORE PUSH9 0x56BC75E2D63100000 PUSH1 0x2 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH20 0x10CEC672C6BB2F6782BEED65987E020902B7BD15 OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP1 SWAP2 AND PUSH20 0xEBE809C70406FC07E70BC2C590BC7DD9BA9272AC OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C CALLER PUSH2 0x81 JUMP JUMPDEST PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x60B DUP1 PUSH2 0xE0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7AD3C93A GT PUSH2 0x61 JUMPI DUP1 PUSH4 0x7AD3C93A EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x8B68E1FA EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0xAEB0BC79 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0xF2C8609E EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1F6 JUMPI STOP JUMPDEST DUP1 PUSH4 0x366A8508 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x4AEFDCCD EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x4B165090 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x75A3AAE7 EQ PUSH2 0x150 JUMPI STOP JUMPDEST CALLDATASIZE PUSH2 0xA1 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0xC3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0x531 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x136 CALLDATASIZE PUSH1 0x4 PUSH2 0x531 JUMP JUMPDEST PUSH2 0x216 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA1 PUSH2 0x26D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0xC3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA1 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x531 JUMP JUMPDEST PUSH2 0x2AC JUMP JUMPDEST PUSH2 0xA1 PUSH2 0x2F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA1 PUSH2 0x1D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x561 JUMP JUMPDEST PUSH2 0x3E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA1 PUSH2 0x1F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x561 JUMP JUMPDEST PUSH2 0x417 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA1 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x531 JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SUB PUSH2 0x23D JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP GT ISZERO PUSH2 0x265 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x2 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x297 SWAP1 PUSH2 0x57A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2AA PUSH1 0x0 PUSH2 0x4E1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x297 SWAP1 PUSH2 0x57A JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD CALLVALUE EQ PUSH2 0x33D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x1B5CD9CB9D985B1D59481A5B9D985B1A59 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x297 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x379 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x398 SWAP1 PUSH4 0x1E13380 PUSH2 0x5AF JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH32 0xE777AE9D65766408C351D743ED88284C7719883019E08000AF32400646ABCFF8 SWAP1 PUSH2 0x3DE SWAP1 CALLVALUE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x412 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x297 SWAP1 PUSH2 0x57A JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x441 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x297 SWAP1 PUSH2 0x57A JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x297 SWAP1 PUSH2 0x57A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x297 JUMP JUMPDEST PUSH2 0x4DE DUP2 PUSH2 0x4E1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x55A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x5D0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB GAS 0xFB CODESIZE PUSH16 0x74D9790E20CBAB83FD8A72C792E299E4 DELEGATECALL 0xE5 PUSH1 0xD9 PUSH25 0xD933A0CFECB64736F6C634300080D00330000000000000000 ",
							"sourceMap": "114:1388:2:-:0;;;163:8;147:24;;195:8;178:25;;210:72;;;-1:-1:-1;;;;;;210:72:2;;;240:42;210:72;;;;289:73;;;;;;320:42;289:73;;;554:23;;;;;;;;;-1:-1:-1;921:32:0;719:10:1;921:18:0;:32::i;:::-;114:1388:2;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;114:1388:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_277": {
									"entryPoint": null,
									"id": 277,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_281": {
									"entryPoint": null,
									"id": 281,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": null,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 1249,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@checkAuth_273": {
									"entryPoint": 534,
									"id": 273,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@endTime_151": {
									"entryPoint": null,
									"id": 151,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@otherFeeAddress_147": {
									"entryPoint": null,
									"id": 147,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@payForRenew_244": {
									"entryPoint": 760,
									"id": 244,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_60": {
									"entryPoint": 621,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setOtherFee_191": {
									"entryPoint": 1000,
									"id": 191,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setYearFeeAddress_203": {
									"entryPoint": 684,
									"id": 203,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setYearFee_179": {
									"entryPoint": 1047,
									"id": 179,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 1094,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@yearFeeAddress_144": {
									"entryPoint": null,
									"id": 144,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00b4f8ff0ecfa94b2f6dc3e8729250f8e3850eaf9049ec46c425a3f1cfef623d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2221:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:102:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "198:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "203:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "207:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:3",
														"type": ""
													}
												],
												"src": "14:203:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "292:216:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "338:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "347:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "350:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "340:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "340:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "340:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "313:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "322:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "309:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "309:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "334:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "305:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "305:32:3"
															},
															"nodeType": "YulIf",
															"src": "302:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "363:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "389:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "376:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "367:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "462:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "471:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "464:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "464:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "464:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "421:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "432:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "447:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "452:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "443:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "443:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "456:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "439:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "439:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "428:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "428:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "418:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "418:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "411:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "411:50:3"
															},
															"nodeType": "YulIf",
															"src": "408:70:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "487:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "497:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "487:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "258:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "269:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "281:6:3",
														"type": ""
													}
												],
												"src": "222:286:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "614:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "624:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "636:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "647:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "632:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "632:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "624:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "666:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "677:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "659:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "659:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "659:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "583:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "594:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "605:4:3",
														"type": ""
													}
												],
												"src": "513:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "765:110:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "811:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "820:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "823:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "813:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "813:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "813:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "786:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "795:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "782:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "782:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "807:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "778:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:32:3"
															},
															"nodeType": "YulIf",
															"src": "775:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "836:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "859:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "846:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "846:23:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "836:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "731:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "742:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "754:6:3",
														"type": ""
													}
												],
												"src": "695:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1054:182:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1071:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1082:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1064:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1064:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1064:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1105:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1116:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1101:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1101:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1121:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1094:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1094:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1094:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1144:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1155:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1140:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1140:18:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1160:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1133:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1133:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1133:62:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1204:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1216:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1227:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1212:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1212:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1204:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1031:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1045:4:3",
														"type": ""
													}
												],
												"src": "880:356:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1415:167:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1432:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1443:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1425:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1425:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1425:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1466:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1477:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1462:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1462:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1482:2:3",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1455:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1455:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1455:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1505:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1516:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1501:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1501:18:3"
																	},
																	{
																		"hexValue": "6d73672e76616c756520696e76616c6964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1521:19:3",
																		"type": "",
																		"value": "msg.value invalid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1494:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1494:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1494:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1550:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1562:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1558:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1558:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1550:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00b4f8ff0ecfa94b2f6dc3e8729250f8e3850eaf9049ec46c425a3f1cfef623d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1392:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1406:4:3",
														"type": ""
													}
												],
												"src": "1241:341:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1635:177:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1670:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1691:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1698:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1703:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1694:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1694:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1684:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1684:31:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1684:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1735:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1738:4:3",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1728:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1728:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1728:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1763:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1766:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1756:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1756:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1756:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1651:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1658:1:3"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1654:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1654:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1648:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1648:13:3"
															},
															"nodeType": "YulIf",
															"src": "1645:136:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1790:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1801:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1804:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1797:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1790:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1618:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1621:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1627:3:3",
														"type": ""
													}
												],
												"src": "1587:225:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1991:228:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2008:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2019:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2001:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2001:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2042:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2053:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2038:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2038:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2058:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2031:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2031:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2031:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2081:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2092:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2077:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2077:18:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2097:34:3",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2070:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2070:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2070:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2152:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2163:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2148:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2148:18:3"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2168:8:3",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2141:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2141:36:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2141:36:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2186:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2198:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2209:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2194:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2194:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2186:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1968:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1982:4:3",
														"type": ""
													}
												],
												"src": "1817:402:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_00b4f8ff0ecfa94b2f6dc3e8729250f8e3850eaf9049ec46c425a3f1cfef623d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"msg.value invalid\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061009a5760003560e01c80637ad3c93a116100615780637ad3c93a146101705780638b68e1fa146101905780638da5cb5b14610198578063aeb0bc79146101b6578063f2c8609e146101d6578063f2fde38b146101f657005b8063366a8508146100a35780634aefdccd146100e05780634b1650901461011b578063715018a61461013b57806375a3aae71461015057005b366100a157005b005b3480156100af57600080fd5b506004546100c3906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100ec57600080fd5b5061010d6100fb366004610531565b60056020526000908152604090205481565b6040519081526020016100d7565b34801561012757600080fd5b5061010d610136366004610531565b610216565b34801561014757600080fd5b506100a161026d565b34801561015c57600080fd5b506003546100c3906001600160a01b031681565b34801561017c57600080fd5b506100a161018b366004610531565b6102ac565b6100a16102f8565b3480156101a457600080fd5b506000546001600160a01b03166100c3565b3480156101c257600080fd5b506100a16101d1366004610561565b6103e8565b3480156101e257600080fd5b506100a16101f1366004610561565b610417565b34801561020257600080fd5b506100a1610211366004610531565b610446565b6001600160a01b038116600090815260056020526040812054810361023d57506000919050565b6001600160a01b03821660009081526005602052604090205442111561026557506001919050565b506002919050565b6000546001600160a01b031633146102a05760405162461bcd60e51b81526004016102979061057a565b60405180910390fd5b6102aa60006104e1565b565b6000546001600160a01b031633146102d65760405162461bcd60e51b81526004016102979061057a565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600154341461033d5760405162461bcd60e51b81526020600482015260116024820152701b5cd9cb9d985b1d59481a5b9d985b1a59607a1b6044820152606401610297565b6003546001546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610379573d6000803e3d6000fd5b5033600090815260056020526040902054610398906301e133806105af565b33600081815260056020526040908190209290925590517fe777ae9d65766408c351d743ed88284c7719883019e08000af32400646abcff8906103de9034815260200190565b60405180910390a2565b6000546001600160a01b031633146104125760405162461bcd60e51b81526004016102979061057a565b600255565b6000546001600160a01b031633146104415760405162461bcd60e51b81526004016102979061057a565b600155565b6000546001600160a01b031633146104705760405162461bcd60e51b81526004016102979061057a565b6001600160a01b0381166104d55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610297565b6104de816104e1565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561054357600080fd5b81356001600160a01b038116811461055a57600080fd5b9392505050565b60006020828403121561057357600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156105d057634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220eb5afb386f74d9790e20cbab83fd8a72c792e299e4f4e560d9780d933a0cfecb64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7AD3C93A GT PUSH2 0x61 JUMPI DUP1 PUSH4 0x7AD3C93A EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x8B68E1FA EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0xAEB0BC79 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0xF2C8609E EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1F6 JUMPI STOP JUMPDEST DUP1 PUSH4 0x366A8508 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x4AEFDCCD EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x4B165090 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x75A3AAE7 EQ PUSH2 0x150 JUMPI STOP JUMPDEST CALLDATASIZE PUSH2 0xA1 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0xC3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0x531 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x136 CALLDATASIZE PUSH1 0x4 PUSH2 0x531 JUMP JUMPDEST PUSH2 0x216 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA1 PUSH2 0x26D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0xC3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA1 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x531 JUMP JUMPDEST PUSH2 0x2AC JUMP JUMPDEST PUSH2 0xA1 PUSH2 0x2F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA1 PUSH2 0x1D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x561 JUMP JUMPDEST PUSH2 0x3E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA1 PUSH2 0x1F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x561 JUMP JUMPDEST PUSH2 0x417 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA1 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x531 JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SUB PUSH2 0x23D JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP GT ISZERO PUSH2 0x265 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x2 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x297 SWAP1 PUSH2 0x57A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2AA PUSH1 0x0 PUSH2 0x4E1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x297 SWAP1 PUSH2 0x57A JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD CALLVALUE EQ PUSH2 0x33D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x1B5CD9CB9D985B1D59481A5B9D985B1A59 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x297 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x379 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x398 SWAP1 PUSH4 0x1E13380 PUSH2 0x5AF JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH32 0xE777AE9D65766408C351D743ED88284C7719883019E08000AF32400646ABCFF8 SWAP1 PUSH2 0x3DE SWAP1 CALLVALUE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x412 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x297 SWAP1 PUSH2 0x57A JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x441 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x297 SWAP1 PUSH2 0x57A JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x297 SWAP1 PUSH2 0x57A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x297 JUMP JUMPDEST PUSH2 0x4DE DUP2 PUSH2 0x4E1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x55A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x5D0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB GAS 0xFB CODESIZE PUSH16 0x74D9790E20CBAB83FD8A72C792E299E4 DELEGATECALL 0xE5 PUSH1 0xD9 PUSH25 0xD933A0CFECB64736F6C634300080D00330000000000000000 ",
							"sourceMap": "114:1388:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;289:73;;;;;;;;;;-1:-1:-1;289:73:2;;;;-1:-1:-1;;;;;289:73:2;;;;;;-1:-1:-1;;;;;178:32:3;;;160:51;;148:2;133:18;289:73:2;;;;;;;;369:39;;;;;;;;;;-1:-1:-1;369:39:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;659:25:3;;;647:2;632:18;369:39:2;513:177:3;1199:223:2;;;;;;;;;;-1:-1:-1;1199:223:2;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;210:72:2:-;;;;;;;;;;-1:-1:-1;210:72:2;;;;-1:-1:-1;;;;;210:72:2;;;777:99;;;;;;;;;;-1:-1:-1;777:99:2;;;;;:::i;:::-;;:::i;884:267::-;;;:::i;1036:85:0:-;;;;;;;;;;-1:-1:-1;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;680:89:2;;;;;;;;;;-1:-1:-1;680:89:2;;;;;:::i;:::-;;:::i;585:87::-;;;;;;;;;;-1:-1:-1;585:87:2;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;1199:223:2:-;-1:-1:-1;;;;;1273:13:2;;1251:7;1273:13;;;:7;:13;;;;;;:16;;1270:126;;-1:-1:-1;1311:1:2;;1199:223;-1:-1:-1;1199:223:2:o;1270:126::-;-1:-1:-1;;;;;1332:13:2;;;;;;:7;:13;;;;;;1346:15;-1:-1:-1;1329:67:2;;;-1:-1:-1;1383:1:2;;1199:223;-1:-1:-1;1199:223:2:o;1329:67::-;-1:-1:-1;1413:1:2;;1199:223;-1:-1:-1;1199:223:2:o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;777:99:2:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;848:14:2::1;:20:::0;;-1:-1:-1;;;;;;848:20:2::1;-1:-1:-1::0;;;;;848:20:2;;;::::1;::::0;;;::::1;::::0;;777:99::o;884:267::-;953:7;;940:9;:20;932:49;;;;-1:-1:-1;;;932:49:2;;1443:2:3;932:49:2;;;1425:21:3;1482:2;1462:18;;;1455:30;-1:-1:-1;;;1501:18:3;;;1494:47;1558:18;;932:49:2;1241:341:3;932:49:2;999:14;;;1024:7;991:41;;-1:-1:-1;;;;;999:14:2;;;;991:41;;;;;1024:7;999:14;991:41;999:14;991:41;1024:7;999:14;991:41;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1070:10:2;1062:19;;;;:7;:19;;;;;;:29;;1082:9;1062:29;:::i;:::-;1050:10;1042:19;;;;:7;:19;;;;;;;:49;;;;1106:37;;;;;;1133:9;659:25:3;;647:2;632:18;;513:177;1106:37:2;;;;;;;;884:267::o;680:89::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;746:8:2::1;:15:::0;680:89::o;585:87::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;650:7:2::1;:14:::0;585:87::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;2019:2:3;1998:73:0::1;::::0;::::1;2001:21:3::0;2058:2;2038:18;;;2031:30;2097:34;2077:18;;;2070:62;-1:-1:-1;;;2148:18:3;;;2141:36;2194:19;;1998:73:0::1;1817:402:3::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2270:187::-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;222:286:3:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;376:23;;-1:-1:-1;;;;;428:31:3;;418:42;;408:70;;474:1;471;464:12;408:70;497:5;222:286;-1:-1:-1;;;222:286:3:o;695:180::-;754:6;807:2;795:9;786:7;782:23;778:32;775:52;;;823:1;820;813:12;775:52;-1:-1:-1;846:23:3;;695:180;-1:-1:-1;695:180:3:o;880:356::-;1082:2;1064:21;;;1101:18;;;1094:30;1160:34;1155:2;1140:18;;1133:62;1227:2;1212:18;;880:356::o;1587:225::-;1627:3;1658:1;1654:6;1651:1;1648:13;1645:136;;;1703:10;1698:3;1694:20;1691:1;1684:31;1738:4;1735:1;1728:15;1766:4;1763:1;1756:15;1645:136;-1:-1:-1;1797:9:3;;1587:225::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "309400",
								"executionCost": "118871",
								"totalCost": "428271"
							},
							"external": {
								"": "184",
								"checkAuth(address)": "4804",
								"endTime(address)": "2507",
								"otherFeeAddress()": "2327",
								"owner()": "2364",
								"payForRenew()": "infinite",
								"renounceOwnership()": "28181",
								"setOtherFee(uint256)": "24530",
								"setYearFee(uint256)": "24552",
								"setYearFeeAddress(address)": "26676",
								"transferOwnership(address)": "28384",
								"yearFeeAddress()": "2415"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 114,
									"end": 1502,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 114,
									"end": 1502,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 114,
									"end": 1502,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 163,
									"end": 171,
									"name": "PUSH",
									"source": 2,
									"value": "AD78EBC5AC6200000"
								},
								{
									"begin": 147,
									"end": 171,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 147,
									"end": 171,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 195,
									"end": 203,
									"name": "PUSH",
									"source": 2,
									"value": "56BC75E2D63100000"
								},
								{
									"begin": 178,
									"end": 203,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 178,
									"end": 203,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 210,
									"end": 282,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 210,
									"end": 282,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 210,
									"end": 282,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 210,
									"end": 282,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 210,
									"end": 282,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 210,
									"end": 282,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 240,
									"end": 282,
									"name": "PUSH",
									"source": 2,
									"value": "10CEC672C6BB2F6782BEED65987E020902B7BD15"
								},
								{
									"begin": 210,
									"end": 282,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 210,
									"end": 282,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 210,
									"end": 282,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 210,
									"end": 282,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 289,
									"end": 362,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 289,
									"end": 362,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 289,
									"end": 362,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 289,
									"end": 362,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 289,
									"end": 362,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 289,
									"end": 362,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 320,
									"end": 362,
									"name": "PUSH",
									"source": 2,
									"value": "EBE809C70406FC07E70BC2C590BC7DD9BA9272AC"
								},
								{
									"begin": 289,
									"end": 362,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 289,
									"end": 362,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 289,
									"end": 362,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 554,
									"end": 577,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 554,
									"end": 577,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 554,
									"end": 577,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 554,
									"end": 577,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 554,
									"end": 577,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 554,
									"end": 577,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 554,
									"end": 577,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 554,
									"end": 577,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 554,
									"end": 577,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 554,
									"end": 577,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 114,
									"end": 1502,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 114,
									"end": 1502,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 114,
									"end": 1502,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 114,
									"end": 1502,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 114,
									"end": 1502,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 114,
									"end": 1502,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 114,
									"end": 1502,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 114,
									"end": 1502,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 1502,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 114,
									"end": 1502,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 1502,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eb5afb386f74d9790e20cbab83fd8a72c792e299e4f4e560d9780d933a0cfecb64736f6c634300080d0033",
									".code": [
										{
											"begin": 114,
											"end": 1502,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "PUSH",
											"source": 2,
											"value": "7AD3C93A"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "PUSH",
											"source": 2,
											"value": "7AD3C93A"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "PUSH",
											"source": 2,
											"value": "8B68E1FA"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "PUSH",
											"source": 2,
											"value": "AEB0BC79"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "PUSH",
											"source": 2,
											"value": "F2C8609E"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "PUSH",
											"source": 2,
											"value": "366A8508"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "PUSH",
											"source": 2,
											"value": "4AEFDCCD"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "PUSH",
											"source": 2,
											"value": "4B165090"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "PUSH",
											"source": 2,
											"value": "75A3AAE7"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 114,
											"end": 1502,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 289,
											"end": 362,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 289,
											"end": 362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 289,
											"end": 362,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 289,
											"end": 362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 289,
											"end": 362,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 289,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 289,
											"end": 362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 289,
											"end": 362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 289,
											"end": 362,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 289,
											"end": 362,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 289,
											"end": 362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 289,
											"end": 362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 289,
											"end": 362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 289,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 289,
											"end": 362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 289,
											"end": 362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 289,
											"end": 362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 289,
											"end": 362,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 289,
											"end": 362,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 289,
											"end": 362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 289,
											"end": 362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 289,
											"end": 362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 289,
											"end": 362,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 289,
											"end": 362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 289,
											"end": 362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 289,
											"end": 362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 289,
											"end": 362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 289,
											"end": 362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 289,
											"end": 362,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 289,
											"end": 362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 289,
											"end": 362,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 369,
											"end": 408,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 369,
											"end": 408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 369,
											"end": 408,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 369,
											"end": 408,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 369,
											"end": 408,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 369,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 369,
											"end": 408,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 369,
											"end": 408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 369,
											"end": 408,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 369,
											"end": 408,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 369,
											"end": 408,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 369,
											"end": 408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 369,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 369,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 369,
											"end": 408,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 369,
											"end": 408,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 369,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 369,
											"end": 408,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 369,
											"end": 408,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 369,
											"end": 408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 369,
											"end": 408,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 369,
											"end": 408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 369,
											"end": 408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 369,
											"end": 408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 369,
											"end": 408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 369,
											"end": 408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 369,
											"end": 408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 369,
											"end": 408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 369,
											"end": 408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 369,
											"end": 408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 369,
											"end": 408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 369,
											"end": 408,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 369,
											"end": 408,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 369,
											"end": 408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 369,
											"end": 408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 369,
											"end": 408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 659,
											"end": 684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 659,
											"end": 684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 659,
											"end": 684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 647,
											"end": 649,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 632,
											"end": 650,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 369,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 513,
											"end": 690,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1199,
											"end": 1422,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1199,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1199,
											"end": 1422,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1199,
											"end": 1422,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1199,
											"end": 1422,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1199,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1199,
											"end": 1422,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1199,
											"end": 1422,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1199,
											"end": 1422,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1199,
											"end": 1422,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1199,
											"end": 1422,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1199,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1199,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1199,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1199,
											"end": 1422,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1199,
											"end": 1422,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1199,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1199,
											"end": 1422,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1199,
											"end": 1422,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1199,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1199,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1199,
											"end": 1422,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 210,
											"end": 282,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 210,
											"end": 282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 210,
											"end": 282,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 210,
											"end": 282,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 210,
											"end": 282,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 210,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 210,
											"end": 282,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 210,
											"end": 282,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 210,
											"end": 282,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 210,
											"end": 282,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 210,
											"end": 282,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 210,
											"end": 282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 210,
											"end": 282,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 210,
											"end": 282,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 210,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 210,
											"end": 282,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 210,
											"end": 282,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 210,
											"end": 282,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 210,
											"end": 282,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 777,
											"end": 876,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 777,
											"end": 876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 777,
											"end": 876,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 777,
											"end": 876,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 777,
											"end": 876,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 777,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 777,
											"end": 876,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 777,
											"end": 876,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 876,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 777,
											"end": 876,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 777,
											"end": 876,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 777,
											"end": 876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 777,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 777,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 777,
											"end": 876,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 777,
											"end": 876,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 777,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 777,
											"end": 876,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 777,
											"end": 876,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 777,
											"end": 876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 777,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 777,
											"end": 876,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 884,
											"end": 1151,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 884,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 884,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 884,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 884,
											"end": 1151,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 680,
											"end": 769,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 680,
											"end": 769,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 680,
											"end": 769,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 680,
											"end": 769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 680,
											"end": 769,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 680,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 680,
											"end": 769,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 680,
											"end": 769,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 680,
											"end": 769,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 680,
											"end": 769,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 680,
											"end": 769,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 680,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 680,
											"end": 769,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 680,
											"end": 769,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 680,
											"end": 769,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 680,
											"end": 769,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 680,
											"end": 769,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 680,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 680,
											"end": 769,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 585,
											"end": 672,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 585,
											"end": 672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 585,
											"end": 672,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 585,
											"end": 672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 585,
											"end": 672,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 585,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 585,
											"end": 672,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 585,
											"end": 672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 585,
											"end": 672,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 585,
											"end": 672,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 585,
											"end": 672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 585,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 585,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 585,
											"end": 672,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 585,
											"end": 672,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 585,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 585,
											"end": 672,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 585,
											"end": 672,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 585,
											"end": 672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 585,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 585,
											"end": 672,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1199,
											"end": 1422,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1199,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1286,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1286,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1258,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1286,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1286,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1280,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1286,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1273,
											"end": 1286,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1286,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1273,
											"end": 1286,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1286,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1286,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1289,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1270,
											"end": 1396,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1311,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1311,
											"end": 1312,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1199,
											"end": 1422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1199,
											"end": 1422,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1270,
											"end": 1396,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1270,
											"end": 1396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1332,
											"end": 1345,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1332,
											"end": 1345,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1332,
											"end": 1345,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1332,
											"end": 1345,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1332,
											"end": 1345,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1332,
											"end": 1339,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1332,
											"end": 1345,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1345,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1332,
											"end": 1345,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1332,
											"end": 1345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1332,
											"end": 1345,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1332,
											"end": 1345,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1346,
											"end": 1361,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 1329,
											"end": 1396,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1329,
											"end": 1396,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1383,
											"end": 1384,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1383,
											"end": 1384,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1199,
											"end": 1422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1199,
											"end": 1422,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1329,
											"end": 1396,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1329,
											"end": 1396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1413,
											"end": 1414,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1413,
											"end": 1414,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1199,
											"end": 1422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1199,
											"end": 1422,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 777,
											"end": 876,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 777,
											"end": 876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 848,
											"end": 862,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 848,
											"end": 868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 848,
											"end": 868,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 848,
											"end": 868,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 848,
											"end": 868,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 848,
											"end": 868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 848,
											"end": 868,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 848,
											"end": 868,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 848,
											"end": 868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 848,
											"end": 868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 848,
											"end": 868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 848,
											"end": 868,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 848,
											"end": 868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 848,
											"end": 868,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 777,
											"end": 876,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 884,
											"end": 1151,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 884,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 953,
											"end": 960,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 953,
											"end": 960,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 940,
											"end": 949,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 940,
											"end": 960,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 932,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 932,
											"end": 981,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 932,
											"end": 981,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 932,
											"end": 981,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 932,
											"end": 981,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 932,
											"end": 981,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1443,
											"end": 1445,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 932,
											"end": 981,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 932,
											"end": 981,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 932,
											"end": 981,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1425,
											"end": 1446,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1484,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1485,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B5CD9CB9D985B1D59481A5B9D985B1A59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1494,
											"end": 1541,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1576,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1558,
											"end": 1576,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 932,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1241,
											"end": 1582,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 932,
											"end": 981,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 932,
											"end": 981,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1013,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 999,
											"end": 1013,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1024,
											"end": 1031,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1032,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 991,
											"end": 1032,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 999,
											"end": 1013,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1013,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1013,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1032,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1032,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1032,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 991,
											"end": 1032,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1032,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1031,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1013,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 991,
											"end": 1032,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1032,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1031,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1013,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1032,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1032,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1032,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1032,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1032,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1032,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 991,
											"end": 1032,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1032,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1032,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 991,
											"end": 1032,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1032,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1032,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1032,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 991,
											"end": 1032,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1032,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 991,
											"end": 1032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1070,
											"end": 1080,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1062,
											"end": 1081,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1062,
											"end": 1081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1062,
											"end": 1081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1062,
											"end": 1081,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1062,
											"end": 1081,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1081,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1062,
											"end": 1081,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1062,
											"end": 1081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1062,
											"end": 1081,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1062,
											"end": 1081,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1062,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1062,
											"end": 1091,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1091,
											"name": "PUSH",
											"source": 2,
											"value": "1E13380"
										},
										{
											"begin": 1062,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1062,
											"end": 1091,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1062,
											"end": 1091,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1062,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1050,
											"end": 1060,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1042,
											"end": 1061,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1061,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1042,
											"end": 1061,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1042,
											"end": 1061,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1042,
											"end": 1049,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1042,
											"end": 1061,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1061,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1042,
											"end": 1061,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1042,
											"end": 1061,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1042,
											"end": 1061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1042,
											"end": 1061,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1042,
											"end": 1091,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1042,
											"end": 1091,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1042,
											"end": 1091,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1042,
											"end": 1091,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1143,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1143,
											"name": "PUSH",
											"source": 2,
											"value": "E777AE9D65766408C351D743ED88284C7719883019E08000AF32400646ABCFF8"
										},
										{
											"begin": 1106,
											"end": 1143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1106,
											"end": 1143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1133,
											"end": 1142,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 659,
											"end": 684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 659,
											"end": 684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 647,
											"end": 649,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 632,
											"end": 650,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 632,
											"end": 650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 513,
											"end": 690,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1106,
											"end": 1143,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1106,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1143,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1106,
											"end": 1143,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1143,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1143,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1143,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1143,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 884,
											"end": 1151,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 680,
											"end": 769,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 680,
											"end": 769,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 746,
											"end": 754,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 746,
											"end": 761,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 680,
											"end": 769,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 585,
											"end": 672,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 585,
											"end": 672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 650,
											"end": 657,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 650,
											"end": 664,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 585,
											"end": 672,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2021,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2022,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2058,
											"end": 2060,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2038,
											"end": 2056,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2038,
											"end": 2056,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2056,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2031,
											"end": 2061,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2097,
											"end": 2131,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 2077,
											"end": 2095,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2077,
											"end": 2095,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2077,
											"end": 2095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2070,
											"end": 2132,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2177,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2213,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2194,
											"end": 2213,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1817,
											"end": 2219,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 222,
											"end": 508,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 222,
											"end": 508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 281,
											"end": 287,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 336,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 322,
											"end": 331,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 313,
											"end": 320,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 309,
											"end": 332,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 305,
											"end": 337,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 302,
											"end": 354,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 302,
											"end": 354,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 302,
											"end": 354,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 350,
											"end": 351,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 348,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 340,
											"end": 352,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 302,
											"end": 354,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 302,
											"end": 354,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 376,
											"end": 399,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 376,
											"end": 399,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 459,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 428,
											"end": 459,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 418,
											"end": 460,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 418,
											"end": 460,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 408,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 408,
											"end": 478,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 474,
											"end": 475,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 472,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 464,
											"end": 476,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 408,
											"end": 478,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 408,
											"end": 478,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 497,
											"end": 502,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 222,
											"end": 508,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 222,
											"end": 508,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 695,
											"end": 875,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 695,
											"end": 875,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 754,
											"end": 760,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 809,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 795,
											"end": 804,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 786,
											"end": 793,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 782,
											"end": 805,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 778,
											"end": 810,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 775,
											"end": 827,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 775,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 775,
											"end": 827,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 821,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 813,
											"end": 825,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 775,
											"end": 827,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 775,
											"end": 827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 846,
											"end": 869,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 846,
											"end": 869,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 695,
											"end": 875,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 695,
											"end": 875,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 880,
											"end": 1236,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 880,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1084,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1124,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1160,
											"end": 1194,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1155,
											"end": 1157,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1140,
											"end": 1158,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1140,
											"end": 1158,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1195,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1229,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1212,
											"end": 1230,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1230,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 880,
											"end": 1236,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1587,
											"end": 1812,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1587,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1627,
											"end": 1630,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1659,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1660,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1651,
											"end": 1652,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1648,
											"end": 1661,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1781,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1645,
											"end": 1781,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1703,
											"end": 1713,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 1698,
											"end": 1701,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1694,
											"end": 1714,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1691,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1684,
											"end": 1715,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1742,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1735,
											"end": 1736,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1728,
											"end": 1743,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1770,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1763,
											"end": 1764,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1756,
											"end": 1771,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1781,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1645,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1797,
											"end": 1806,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1806,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1587,
											"end": 1812,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"checkAuth(address)": "4b165090",
							"endTime(address)": "4aefdccd",
							"otherFeeAddress()": "366a8508",
							"owner()": "8da5cb5b",
							"payForRenew()": "8b68e1fa",
							"renounceOwnership()": "715018a6",
							"setOtherFee(uint256)": "aeb0bc79",
							"setYearFee(uint256)": "f2c8609e",
							"setYearFeeAddress(address)": "7ad3c93a",
							"transferOwnership(address)": "f2fde38b",
							"yearFeeAddress()": "75a3aae7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PayForOpenExchange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PayForOpenRenew\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"checkAuth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"endTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"otherFeeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payForRenew\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setOtherFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setYearFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setYearFeeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yearFeeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/ERBPay.sol\":\"ERBPay\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/tokens/ERBPay.sol\":{\"keccak256\":\"0x7974d27ea9b97bf021c6ba166c6d303c062a9c74cf9a505b0eda926884541161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f5c7405d67d095ffb97112e20f8db0884854f268f70e3a2b6ae0f60d734bc1b\",\"dweb:/ipfs/QmSP4XzJGc57izyWkvDu1tNU6xt3nyJ9NyrepHzdSHLsVo\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							126
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 127,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 126,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								126
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							126
						]
					},
					"id": 127,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 126,
							"linearizedBaseContracts": [
								126
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 112,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 111,
												"id": 114,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 126,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 121,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 120,
												"id": 123,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 126,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 127,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"contracts/tokens/ERBPay.sol": {
				"ast": {
					"absolutePath": "contracts/tokens/ERBPay.sol",
					"exportedSymbols": {
						"Context": [
							126
						],
						"ERBPay": [
							282
						],
						"Ownable": [
							104
						]
					},
					"id": 283,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 128,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 129,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 283,
							"sourceUnit": 105,
							"src": "58:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 130,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "133:7:2"
									},
									"id": 131,
									"nodeType": "InheritanceSpecifier",
									"src": "133:7:2"
								}
							],
							"canonicalName": "ERBPay",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 282,
							"linearizedBaseContracts": [
								282,
								104,
								126
							],
							"name": "ERBPay",
							"nameLocation": "123:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 136,
									"mutability": "mutable",
									"name": "yearFee",
									"nameLocation": "155:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 282,
									"src": "147:24:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 132,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "147:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_200000000000000000000_by_1",
											"typeString": "int_const 200000000000000000000"
										},
										"id": 135,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "323030",
											"id": 133,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "163:3:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_200_by_1",
												"typeString": "int_const 200"
											},
											"value": "200"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653138",
											"id": 134,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "167:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "163:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_200000000000000000000_by_1",
											"typeString": "int_const 200000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 141,
									"mutability": "mutable",
									"name": "otherFee",
									"nameLocation": "186:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 282,
									"src": "178:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 137,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "178:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_100000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000"
										},
										"id": 140,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "313030",
											"id": 138,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "195:3:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653138",
											"id": 139,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "199:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "195:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "75a3aae7",
									"id": 144,
									"mutability": "mutable",
									"name": "yearFeeAddress",
									"nameLocation": "225:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 282,
									"src": "210:72:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 142,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "210:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307831304345633637326336424232663637383242454544363539383745303230393032423762443135",
										"id": 143,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "240:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x10CEc672c6BB2f6782BEED65987E020902B7bD15"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "366a8508",
									"id": 147,
									"mutability": "mutable",
									"name": "otherFeeAddress",
									"nameLocation": "304:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 282,
									"src": "289:73:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 145,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "289:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307845624538303943373034303646633037653730426332633539306243374464394261393237324163",
										"id": 146,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "320:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xEbE809C70406Fc07e70Bc2c590bC7Dd9Ba9272Ac"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4aefdccd",
									"id": 151,
									"mutability": "mutable",
									"name": "endTime",
									"nameLocation": "401:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 282,
									"src": "369:39:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 150,
										"keyType": {
											"id": 148,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "377:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "369:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 149,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "386:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "728aa0ba54574e206497a83a73cea62ca17f538ca83666c089018a2ce41700f4",
									"id": 157,
									"name": "PayForOpenExchange",
									"nameLocation": "421:18:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "456:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "440:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "472:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "464:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "464:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "439:40:2"
									},
									"src": "415:65:2"
								},
								{
									"anonymous": false,
									"eventSelector": "e777ae9d65766408c351d743ed88284c7719883019e08000af32400646abcff8",
									"id": 163,
									"name": "PayForOpenRenew",
									"nameLocation": "492:15:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "524:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "508:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "508:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "540:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "532:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "532:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "507:40:2"
									},
									"src": "486:62:2"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "569:8:2",
										"statements": []
									},
									"id": 167,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "566:2:2"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "569:0:2"
									},
									"scope": 282,
									"src": "554:23:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "639:33:2",
										"statements": [
											{
												"expression": {
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 174,
														"name": "yearFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "650:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 175,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "658:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "650:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "650:14:2"
											}
										]
									},
									"functionSelector": "f2c8609e",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 172,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 171,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "630:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "630:9:2"
										}
									],
									"name": "setYearFee",
									"nameLocation": "594:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "613:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "605:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "605:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "604:16:2"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "639:0:2"
									},
									"scope": 282,
									"src": "585:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "735:34:2",
										"statements": [
											{
												"expression": {
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 186,
														"name": "otherFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "746:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 187,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "755:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "746:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "746:15:2"
											}
										]
									},
									"functionSelector": "aeb0bc79",
									"id": 191,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 184,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 183,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "726:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "726:9:2"
										}
									],
									"name": "setOtherFee",
									"nameLocation": "689:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "709:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "701:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "700:16:2"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "735:0:2"
									},
									"scope": 282,
									"src": "680:89:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "837:39:2",
										"statements": [
											{
												"expression": {
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 198,
														"name": "yearFeeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 144,
														"src": "848:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 199,
														"name": "_addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "863:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "848:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "848:20:2"
											}
										]
									},
									"functionSelector": "7ad3c93a",
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 196,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 195,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "828:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "828:9:2"
										}
									],
									"name": "setYearFeeAddress",
									"nameLocation": "786:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "812:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "804:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:15:2"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "837:0:2"
									},
									"scope": 282,
									"src": "777:99:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "922:229:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 207,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "940:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "940:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 209,
																"name": "yearFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "953:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "940:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d73672e76616c756520696e76616c6964",
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "961:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_00b4f8ff0ecfa94b2f6dc3e8729250f8e3850eaf9049ec46c425a3f1cfef623d",
																"typeString": "literal_string \"msg.value invalid\""
															},
															"value": "msg.value invalid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_00b4f8ff0ecfa94b2f6dc3e8729250f8e3850eaf9049ec46c425a3f1cfef623d",
																"typeString": "literal_string \"msg.value invalid\""
															}
														],
														"id": 206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "932:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "932:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "932:49:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 219,
															"name": "yearFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "1024:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 216,
																	"name": "yearFeeAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "999:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "991:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 214,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "991:8:2",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "991:23:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "991:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "991:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "991:41:2"
											},
											{
												"expression": {
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 222,
															"name": "endTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "1042:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 225,
														"indexExpression": {
															"expression": {
																"id": 223,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1050:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1050:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1042:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 226,
																"name": "endTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 151,
																"src": "1062:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 229,
															"indexExpression": {
																"expression": {
																	"id": 227,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1070:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1070:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1062:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_31536000_by_1",
																"typeString": "int_const 31536000"
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3836343030",
																"id": 230,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1082:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "86400"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "333635",
																"id": 231,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1088:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_365_by_1",
																	"typeString": "int_const 365"
																},
																"value": "365"
															},
															"src": "1082:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_31536000_by_1",
																"typeString": "int_const 31536000"
															}
														},
														"src": "1062:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1042:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "1042:49:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 237,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1122:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1122:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 239,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1133:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1133:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 236,
														"name": "PayForOpenRenew",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "1106:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1106:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "EmitStatement",
												"src": "1101:42:2"
											}
										]
									},
									"functionSelector": "8b68e1fa",
									"id": 244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "payForRenew",
									"nameLocation": "893:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "904:2:2"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "922:0:2"
									},
									"scope": 282,
									"src": "884:267:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "1259:163:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 251,
															"name": "endTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "1273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 253,
														"indexExpression": {
															"id": 252,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "1281:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1273:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 254,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1288:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1273:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 259,
																"name": "endTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 151,
																"src": "1332:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 261,
															"indexExpression": {
																"id": 260,
																"name": "addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "1340:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1332:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"expression": {
																"id": 262,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1346:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1346:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1332:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 268,
													"nodeType": "IfStatement",
													"src": "1329:67:2",
													"trueBody": {
														"id": 267,
														"nodeType": "Block",
														"src": "1362:34:2",
														"statements": [
															{
																"expression": {
																	"hexValue": "31",
																	"id": 265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1383:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"functionReturnParameters": 250,
																"id": 266,
																"nodeType": "Return",
																"src": "1376:8:2"
															}
														]
													}
												},
												"id": 269,
												"nodeType": "IfStatement",
												"src": "1270:126:2",
												"trueBody": {
													"id": 258,
													"nodeType": "Block",
													"src": "1290:34:2",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1311:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 250,
															"id": 257,
															"nodeType": "Return",
															"src": "1304:8:2"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "32",
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1413:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_2_by_1",
														"typeString": "int_const 2"
													},
													"value": "2"
												},
												"functionReturnParameters": 250,
												"id": 271,
												"nodeType": "Return",
												"src": "1406:8:2"
											}
										]
									},
									"functionSelector": "4b165090",
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkAuth",
									"nameLocation": "1208:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "1226:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "1218:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1218:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1217:14:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "1251:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:9:2"
									},
									"scope": 282,
									"src": "1199:223:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "1462:2:2",
										"statements": []
									},
									"id": 277,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1442:2:2"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1462:0:2"
									},
									"scope": 282,
									"src": "1434:30:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "1497:2:2",
										"statements": []
									},
									"id": 281,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1477:2:2"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1497:0:2"
									},
									"scope": 282,
									"src": "1470:29:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 283,
							"src": "114:1388:2",
							"usedErrors": []
						}
					],
					"src": "33:1469:2"
				},
				"id": 2
			}
		}
	}
}