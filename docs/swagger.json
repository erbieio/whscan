{
    "swagger": "2.0",
    "info": {
        "description": "Block browser back-end interface, parses data from the blockchain, provides information retrieval services for blocks, transactions, NFT, SNFT, NFT collections, and exchanges",
        "title": "block explorer API",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/account/page": {
            "get": {
                "description": "set the account ranking according to the amount of coins held",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "query top accounts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page, default 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page size, default 10",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.AccountsRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/account/{addr}": {
            "get": {
                "description": "Query the account information of the specified address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "query one account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account address",
                        "name": "addr",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.AccountRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/block/getBlock": {
            "get": {
                "description": "query block",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "obsolete interface"
                ],
                "summary": "query block (new /block/{number})",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "block number",
                        "name": "block_number",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.GetBlockRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrRes"
                        }
                    }
                }
            }
        },
        "/block/getTransaction": {
            "get": {
                "description": "query transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "obsolete interface"
                ],
                "summary": "query transaction (new /transaction/{hash})",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction hash",
                        "name": "tx_hash",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.GetTxRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrRes"
                        }
                    }
                }
            }
        },
        "/block/getTransactionLogs": {
            "get": {
                "description": "query receipt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "obsolete interface"
                ],
                "summary": "query receipt (new /transaction_logs/{hash})",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction hash",
                        "name": "tx_hash",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.GetReceiptsRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrRes"
                        }
                    }
                }
            }
        },
        "/block/page": {
            "get": {
                "description": "Query the block list in reverse order of height",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "block"
                ],
                "summary": "query block list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page, default 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page size, default 10",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.BlocksRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/block/viewBlocks": {
            "get": {
                "description": "query block list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "obsolete interface"
                ],
                "summary": "query block list (new /block/page)",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ViewBlocksRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrRes"
                        }
                    }
                }
            }
        },
        "/block/viewTransactions": {
            "get": {
                "description": "query transaction list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "obsolete interface"
                ],
                "summary": "query transaction list (new /transaction/page)",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address does not distinguish transmission",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Block number is indistinguishable",
                        "name": "block_number",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ViewTxsRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrRes"
                        }
                    }
                }
            }
        },
        "/block/{number}": {
            "get": {
                "description": "specifies the number query block",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "block"
                ],
                "summary": "query block",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Block number",
                        "name": "number",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Block"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/chart/line": {
            "get": {
                "description": "query charts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chart"
                ],
                "summary": "query charts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Limit, default 10",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.LineChartRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/chart/nft": {
            "get": {
                "description": "query 24h nft growth charts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chart"
                ],
                "summary": "query 24h nft growth charts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.NFTChartRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/chart/tx": {
            "get": {
                "description": "query 24h tx growth charts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chart"
                ],
                "summary": "query 24h tx growth charts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.TxChartRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/collection/page": {
            "get": {
                "description": "Query NFT collection list in reverse order of created block height",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT Collection"
                ],
                "summary": "Query the list of NFT collections",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Exchange, if empty, query all exchanges",
                        "name": "exchanger",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Creator, if empty, query all",
                        "name": "creator",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Type: all, nft, snft, default all",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page, default 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page size, default 10",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.CollectionsRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/collection/{id}": {
            "get": {
                "description": "specifies the ID to query the NFT collection information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT Collection"
                ],
                "summary": "query NFT collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Collection"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/epoch": {
            "get": {
                "description": "Query the system NFT period list in reverse order of creation time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system NFT period"
                ],
                "summary": "Query the system NFT period list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page, default 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page size, default 10",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.EpochsRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/epoch/{id}": {
            "get": {
                "description": "specifies the ID to query the NFT period information of the system, including 16 collection information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system NFT period"
                ],
                "summary": "Query system NFT period",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Period ID, current means query the current period",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Epoch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/erb_price": {
            "get": {
                "description": "Query an ERB price, 1ERB=10^18wei, failed to implement the ERB price definition, fixed at 1ERB=0.5USD",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "other interfaces"
                ],
                "summary": "query ERB price",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.price"
                        }
                    }
                }
            }
        },
        "/exchanger/get": {
            "get": {
                "description": "Query exchanges by address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "obsolete interface"
                ],
                "summary": "query exchange (new /exchanger/{addr})",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "Exchange address",
                        "name": "addr",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Exchanger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/exchanger/page": {
            "get": {
                "description": "Query the list of exchanges in reverse order of creation time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Exchange"
                ],
                "summary": "Query the list of exchanges",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Exchange name, if empty, query all exchanges",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page, default 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page size, default 10",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.ExchangersRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/exchanger/tx_count/{addr}": {
            "get": {
                "description": "Query the exchanges tx count chart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Exchange"
                ],
                "summary": "Query the exchanges tx count",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Exchanger address",
                        "name": "addr",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.ExchangerTxCountRes"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/exchanger/{addr}": {
            "get": {
                "description": "Query exchanges by address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Exchange"
                ],
                "summary": "query exchange",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Exchange address",
                        "name": "addr",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.ExchangerRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/exchanger_auth": {
            "get": {
                "description": "query exchange status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "other interfaces"
                ],
                "summary": "query exchange status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "addr",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.AuthRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/exchangers": {
            "get": {
                "description": "Query the list of exchanges in reverse order of creation time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Exchange"
                ],
                "summary": "Query the list of exchanges",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sort by conditions, Support database order statement",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page, default 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page size, default 10",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.ExchangerRes"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/extra/checkAuth": {
            "get": {
                "description": "query exchange status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "obsolete interface"
                ],
                "summary": "query exchange status (new /exchanger_auth)",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address",
                        "name": "address",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.CheckAuthRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrRes"
                        }
                    }
                }
            }
        },
        "/last_msg": {
            "get": {
                "description": "Query validator's last msg list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "block"
                ],
                "summary": "query validator msg list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.Msg"
                            }
                        }
                    }
                }
            }
        },
        "/locations": {
            "get": {
                "description": "Query validator's locations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "block"
                ],
                "summary": "query validator locations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.LocationRes"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/nft/page": {
            "get": {
                "description": "Query the NFT list in reverse order of creation time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "query NFT list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Exchange, if empty, query all exchanges",
                        "name": "exchanger",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Owner, if empty, query all",
                        "name": "owner",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "collection id, if empty, query all",
                        "name": "collection_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page, default 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page size, default 10",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.NFTsRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/nft/tx/page": {
            "get": {
                "description": "Query the list of NFT transactions in reverse order of creation time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Query NFT transaction list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Specify the NFT address, if empty, query all addresses",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Exchange, if empty, query all exchanges",
                        "name": "exchanger",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Specify an account, if empty, query all accounts",
                        "name": "account",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page, default 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page size, default 10",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.NFTTxsRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/nft/{addr}": {
            "get": {
                "description": "Query one NFT by address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "query one NFT",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address",
                        "name": "addr",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.NFT"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/nft_meta/page": {
            "get": {
                "description": "query the NFT list containing meta information in reverse order of creation time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "query contains meta information NFT list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Exchange, if empty, query all exchanges",
                        "name": "exchanger",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Owner, if empty, query all",
                        "name": "owner",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "collection id, if empty, query all",
                        "name": "collection_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page, default 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page size, default 10",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.NFTsRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/ranking/exchanger": {
            "get": {
                "description": "Exchanger ranking for a specified time range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ranking"
                ],
                "summary": "query exchanger ranking",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page, default 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page size, default 10",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.RankingExchangerRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/ranking/nft": {
            "get": {
                "description": "NFT ranking for a specified time range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ranking"
                ],
                "summary": "query NFT ranking",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page, default 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page size, default 10",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.RankingNFTRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/ranking/snft": {
            "get": {
                "description": "SNFT ranking for a specified time range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ranking"
                ],
                "summary": "query SNFT ranking",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page, default 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page size, default 10",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.RankingSNFTRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/reward": {
            "get": {
                "description": "query the reward list in reverse order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reward"
                ],
                "summary": "Query the reward list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page, default 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page size, default 10",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.RewardsRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/reward/{block}": {
            "get": {
                "description": "specifies the block query reward",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reward"
                ],
                "summary": "query reward",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Block height",
                        "name": "block",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.Reward"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/snft/block": {
            "get": {
                "description": "Query the list of SNFT rewards for the specified block",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Query blocks SNFT list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Block number",
                        "name": "number",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.SNFT"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/snft/collection/page": {
            "get": {
                "description": "Query the collection list (including 16 FNFT information) held by the specified account (with one SNFT in the collection)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "paging query account holding collection list",
                "parameters": [
                    {
                        "type": "number",
                        "description": "1:pledged, 2:unPledged, other:all",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "owner",
                        "name": "owner",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page, default 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page size, default 10",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.SNFTGroupsRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/snft/group/{id}": {
            "get": {
                "description": "Query the information of 16 SNFTs under the FNFT of the specified ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Query the list of 16 SNFTs of the specified FNFT",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FNFT ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.SNFT"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/snft/page": {
            "get": {
                "description": "Query the SNFT list in reverse order of creation time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "query SNFT list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner, if empty, query all",
                        "name": "owner",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page, default 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page size, default 10",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.SNFTsRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/snft/recycle_tx": {
            "get": {
                "description": "Query one SNFT recycle transaction by address or tx hash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "query recycle transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "recycle tx hash",
                        "name": "hash",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "recycle address",
                        "name": "addr",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.NFTTx"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/snft/{addr}": {
            "get": {
                "description": "Query one SNFT by address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "query one SNFT",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address",
                        "name": "addr",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.SNFT"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/snft_com/page": {
            "get": {
                "description": "Query the Composable SNFT list in reverse order of creation time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "query Composable SNFT list (new /snft/page)",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner, if empty, query all",
                        "name": "owner",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "1:pledged, 2:free trade, 3:can pledge, other:all",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page, default 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page size, default 10",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.SNFTsRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/snft_meta/page": {
            "get": {
                "description": "Query the list of SNFTs with meta information in reverse order of creation time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Query a list of SNFTs with meta information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "collection id, if empty, query all",
                        "name": "collection_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "exchanger, if empty, query all",
                        "name": "exchanger",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Owner, if empty, query all",
                        "name": "owner",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page, default 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page size, default 10",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.SNFTsAndMetaRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/subscription": {
            "get": {
                "description": "Query the list of subscription mailboxes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "other interfaces"
                ],
                "summary": "Query the list of subscription mailboxes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page, default 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page size, default 10",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Subscription"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            },
            "post": {
                "description": "Enter the email address to receive the latest event notifications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "other interfaces"
                ],
                "summary": "subscribe email",
                "parameters": [
                    {
                        "description": "Mailbox",
                        "name": "_",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Subscribe"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/totals": {
            "get": {
                "description": "Query the total number of blocks, transactions, accounts, etc.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "block"
                ],
                "summary": "query some total data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Stats"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/transaction/internal/page": {
            "get": {
                "description": "query internal transaction list in reverse order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "query internal transaction list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page, default 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page size, default 10",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.InternalTxsRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/transaction/internal/{hash}": {
            "get": {
                "description": "specifies the hash query internal transaction",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "query internal transaction list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "tx hash",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.InternalTx"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/transaction/page": {
            "get": {
                "description": "query transaction list in reverse order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "query transaction list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page, default 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page size, default 10",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Block number, if empty, query all",
                        "name": "number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Account address, if empty, query all",
                        "name": "addr",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.TransactionsRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/transaction/{hash}": {
            "get": {
                "description": "specifies the hash query transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "query transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction hash",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.TransactionRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/transaction_logs/{hash}": {
            "get": {
                "description": "specifies the transaction hash to query the transaction receipt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "query transaction receipt",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction hash",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.EventLog"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        },
        "/validators": {
            "get": {
                "description": "Query validator's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "block"
                ],
                "summary": "query validator list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page, default 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page size, default 10",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Validator"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.ErrRes"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.AuthRes": {
            "type": "object",
            "properties": {
                "exchanger_balance": {
                    "type": "string"
                },
                "exchanger_flag": {
                    "type": "boolean"
                },
                "status": {
                    "description": "2 The payment status of the exchange is normal, other numbers are arrears or no payment",
                    "type": "integer"
                }
            }
        },
        "api.CheckAuthRes": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "0 success 1 wrong address other failure",
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/api.AuthRes"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "api.ErrRes": {
            "type": "object",
            "properties": {
                "err": {
                    "description": "Error message",
                    "type": "string"
                }
            }
        },
        "api.GetBlockRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/service.Block"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "api.GetReceiptsRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.Log"
                    }
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "api.GetTxRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/service.Transaction"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "api.Subscribe": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "api.ViewBlocksRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.Block"
                    }
                },
                "msg": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "api.ViewTxsRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.Transaction"
                    }
                },
                "msg": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "api.price": {
            "type": "object",
            "properties": {
                "CNY": {
                    "description": "The price of an ERB in RMB",
                    "type": "number"
                },
                "USD": {
                    "description": "The price of an ERB in USD",
                    "type": "number"
                }
            }
        },
        "model.Account": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "address",
                    "type": "string"
                },
                "balance": {
                    "description": "The total amount of coins in the chain",
                    "type": "string"
                },
                "code": {
                    "description": "bytecode",
                    "type": "string"
                },
                "createdTx": {
                    "description": "create transaction",
                    "type": "string"
                },
                "creator": {
                    "description": "address",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "nonce": {
                    "description": "transaction random number, transaction volume",
                    "type": "integer"
                },
                "symbol": {
                    "description": "symbol",
                    "type": "string"
                },
                "type": {
                    "description": "contract types, ERC20, ERC721, ERC1155",
                    "type": "integer"
                }
            }
        },
        "model.Block": {
            "type": "object",
            "properties": {
                "difficulty": {
                    "description": "transaction random number, transaction volume",
                    "type": "integer"
                },
                "extraData": {
                    "description": "Extra data",
                    "type": "string"
                },
                "gasLimit": {
                    "description": "transaction random number, transaction volume",
                    "type": "integer"
                },
                "gasUsed": {
                    "description": "transaction random number, transaction volume",
                    "type": "integer"
                },
                "hash": {
                    "description": "create transaction",
                    "type": "string"
                },
                "miner": {
                    "description": "address",
                    "type": "string"
                },
                "mixHash": {
                    "description": "create transaction",
                    "type": "string"
                },
                "nonce": {
                    "description": "difficulty random number",
                    "type": "string"
                },
                "number": {
                    "description": "transaction random number, transaction volume",
                    "type": "integer"
                },
                "parentHash": {
                    "description": "create transaction",
                    "type": "string"
                },
                "receiptsRoot": {
                    "description": "create transaction",
                    "type": "string"
                },
                "sha3Uncles": {
                    "description": "create transaction",
                    "type": "string"
                },
                "size": {
                    "description": "transaction random number, transaction volume",
                    "type": "integer"
                },
                "stateRoot": {
                    "description": "create transaction",
                    "type": "string"
                },
                "timestamp": {
                    "description": "transaction random number, transaction volume",
                    "type": "integer"
                },
                "totalDifficulty": {
                    "description": "The total amount of coins in the chain",
                    "type": "string"
                },
                "totalTransaction": {
                    "description": "transaction random number, transaction volume",
                    "type": "integer"
                },
                "transactionsRoot": {
                    "description": "create transaction",
                    "type": "string"
                },
                "uncles": {
                    "description": "Uncle block hash",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "unclesCount": {
                    "description": "transaction random number, transaction volume",
                    "type": "integer"
                }
            }
        },
        "model.Collection": {
            "type": "object",
            "properties": {
                "block_number": {
                    "description": "Create block height, equal to the first NFT in the collection",
                    "type": "integer"
                },
                "category": {
                    "description": "category",
                    "type": "string"
                },
                "creator": {
                    "description": "Creator",
                    "type": "string"
                },
                "desc": {
                    "description": "description",
                    "type": "string"
                },
                "exchanger": {
                    "description": "belongs to the exchange",
                    "type": "string"
                },
                "id": {
                    "description": "ID",
                    "type": "string"
                },
                "img_url": {
                    "description": "image link",
                    "type": "string"
                },
                "meta_url": {
                    "description": "collection meta information URL",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                }
            }
        },
        "model.Epoch": {
            "type": "object",
            "properties": {
                "creator": {
                    "description": "Creator address, also the address of royalty income",
                    "type": "string"
                },
                "dir": {
                    "description": "meta information directory URL",
                    "type": "string"
                },
                "exchanger": {
                    "description": "Exchange address",
                    "type": "string"
                },
                "id": {
                    "description": "period ID",
                    "type": "string"
                },
                "number": {
                    "description": "Starting block height",
                    "type": "integer"
                },
                "royaltyRatio": {
                    "description": "The royalty rate of the same period of SNFT, the unit is one ten thousandth",
                    "type": "integer"
                },
                "timestamp": {
                    "description": "Starting timestamp",
                    "type": "integer"
                },
                "voteWeight": {
                    "description": "Weight",
                    "type": "string"
                }
            }
        },
        "model.EventLog": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "address",
                    "type": "string"
                },
                "blockNumber": {
                    "description": "transaction random number, transaction volume",
                    "type": "integer"
                },
                "data": {
                    "description": "data",
                    "type": "string"
                },
                "logIndex": {
                    "description": "transaction random number, transaction volume",
                    "type": "integer"
                },
                "removed": {
                    "description": "whether to remove",
                    "type": "boolean"
                },
                "topics": {
                    "description": "Uncle block hash",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "transactionHash": {
                    "description": "create transaction",
                    "type": "string"
                }
            }
        },
        "model.Exchanger": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "Exchange address",
                    "type": "string"
                },
                "amount": {
                    "description": "Pledge amount",
                    "type": "string"
                },
                "block_number": {
                    "description": "The block number when created",
                    "type": "integer"
                },
                "close_at": {
                    "description": "if not null, the exchange is closed",
                    "type": "integer"
                },
                "creator": {
                    "description": "Creator address",
                    "type": "string"
                },
                "fee_ratio": {
                    "description": "fee rate, unit 1/10,000",
                    "type": "integer"
                },
                "name": {
                    "description": "Exchange name",
                    "type": "string"
                },
                "nft_count": {
                    "description": "Total NFT count",
                    "type": "integer"
                },
                "reward": {
                    "description": "amount of total reward",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Open time",
                    "type": "integer"
                },
                "tx_amount": {
                    "description": "Total transaction amount, unit wei",
                    "type": "string"
                },
                "tx_hash": {
                    "description": "The transaction created",
                    "type": "string"
                },
                "url": {
                    "description": "Exchange URL",
                    "type": "string"
                }
            }
        },
        "model.InternalTx": {
            "type": "object",
            "properties": {
                "blockNumber": {
                    "description": "transaction random number, transaction volume",
                    "type": "integer"
                },
                "depth": {
                    "description": "transaction random number, transaction volume",
                    "type": "integer"
                },
                "from": {
                    "description": "address",
                    "type": "string"
                },
                "gasLimit": {
                    "description": "transaction random number, transaction volume",
                    "type": "integer"
                },
                "op": {
                    "description": "Operation",
                    "type": "string"
                },
                "to": {
                    "description": "address",
                    "type": "string"
                },
                "txHash": {
                    "description": "create transaction",
                    "type": "string"
                },
                "value": {
                    "description": "The total amount of coins in the chain",
                    "type": "string"
                }
            }
        },
        "model.NFT": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "NFT address, grows automatically from 0x1",
                    "type": "string"
                },
                "attributes": {
                    "description": "Attributes",
                    "type": "string"
                },
                "block_number": {
                    "description": "The height of the created block",
                    "type": "integer"
                },
                "category": {
                    "description": "category",
                    "type": "string"
                },
                "collection_id": {
                    "description": "The id of the collection, the name of the collection + the creator of the collection + the hash of the exchange where the collection is located",
                    "type": "string"
                },
                "creator": {
                    "description": "Creator address",
                    "type": "string"
                },
                "desc": {
                    "description": "description",
                    "type": "string"
                },
                "exchanger_addr": {
                    "description": "The address of the exchange, if there is none, it can be traded on any exchange",
                    "type": "string"
                },
                "last_price": {
                    "description": "The last transaction price (null if the transaction is not completed), the unit is wei",
                    "type": "string"
                },
                "meta_url": {
                    "description": "Real meta information URL",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "owner": {
                    "description": "owner",
                    "type": "string"
                },
                "raw_meta_url": {
                    "description": "Original meta information URL on the chain",
                    "type": "string"
                },
                "royalty_ratio": {
                    "description": "Royalty rate, in ten thousandths",
                    "type": "integer"
                },
                "source_url": {
                    "description": "Resource links, file links such as pictures or videos",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Create timestamp",
                    "type": "integer"
                },
                "tx_amount": {
                    "description": "the total transaction volume of this NFT",
                    "type": "string"
                },
                "tx_hash": {
                    "description": "The transaction hash created",
                    "type": "string"
                }
            }
        },
        "model.NFTTx": {
            "type": "object",
            "properties": {
                "block_number": {
                    "description": "block number",
                    "type": "integer"
                },
                "exchanger_addr": {
                    "description": "Exchange address",
                    "type": "string"
                },
                "fee": {
                    "description": "Transaction fee, in wei (only if there is an exchange and price)",
                    "type": "string"
                },
                "from": {
                    "description": "Seller",
                    "type": "string"
                },
                "nft_addr": {
                    "description": "The NFT address of the transaction",
                    "type": "string"
                },
                "price": {
                    "description": "price, the unit is wei",
                    "type": "string"
                },
                "timestamp": {
                    "description": "transaction timestamp",
                    "type": "integer"
                },
                "to": {
                    "description": "buyer",
                    "type": "string"
                },
                "tx_hash": {
                    "description": "transaction hash",
                    "type": "string"
                },
                "tx_type": {
                    "description": "Transaction type, 1: transfer, 6:recycle, 7:pledge, 8:cancel pledge 14: bid transaction, 15: fixed price purchase, 16: lazy price purchase, 17: lazy price purchase, 18: bid transaction, 19: lazy bid transaction, 20: matching transaction",
                    "type": "integer"
                }
            }
        },
        "model.SNFT": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "SNFT address",
                    "type": "string"
                },
                "last_price": {
                    "description": "The last transaction price, the unit is wei, null if the transaction has not been completed",
                    "type": "string"
                },
                "owner": {
                    "description": "owner, unallocated and reclaimed are null",
                    "type": "string"
                },
                "pieces": {
                    "description": "snft pieces number",
                    "type": "integer"
                },
                "pledge_number": {
                    "description": "The height of the last pledged block, null if not pledge",
                    "type": "integer"
                },
                "remove": {
                    "description": "SNFTs that are synthesized and then removed",
                    "type": "boolean"
                },
                "reward_at": {
                    "description": "The timestamp of the last rewarded, null if not rewarded",
                    "type": "integer"
                },
                "reward_number": {
                    "description": "The height of the last rewarded block",
                    "type": "integer"
                },
                "tx_amount": {
                    "description": "the total transaction volume of this SNFT",
                    "type": "string"
                }
            }
        },
        "model.Stats": {
            "type": "object",
            "properties": {
                "avgBlockTime": {
                    "description": "average block time, ms",
                    "type": "integer"
                },
                "chainId": {
                    "description": "chain id",
                    "type": "integer"
                },
                "firstBlockTime": {
                    "description": "first block unix time",
                    "type": "integer"
                },
                "genesisBalance": {
                    "description": "Total amount of coins created",
                    "type": "string"
                },
                "ready": {
                    "description": "ready, sync latest block",
                    "type": "boolean"
                },
                "rewardCoinCount": {
                    "description": "Total number of times to get coin rewards, 0.1ERB once",
                    "type": "integer"
                },
                "rewardSNFTCount": {
                    "description": "Total number of times to get SNFT rewards",
                    "type": "integer"
                },
                "total24HExchangerTx": {
                    "description": "Total number of exchanger  transactions within 24 hours",
                    "type": "integer"
                },
                "total24HNFT": {
                    "description": "Total number of NFT within 24 hours",
                    "type": "integer"
                },
                "total24HTx": {
                    "description": "Total number of transactions within 24 hours",
                    "type": "integer"
                },
                "totalAccount": {
                    "description": "Total account number",
                    "type": "integer"
                },
                "totalAmount": {
                    "description": "total transaction volume",
                    "type": "string"
                },
                "totalBalance": {
                    "description": "The total amount of coins in the chain",
                    "type": "string"
                },
                "totalBlackHole": {
                    "description": "Total number of BlackHole blocks",
                    "type": "integer"
                },
                "totalBlock": {
                    "description": "Total number of blocks",
                    "type": "integer"
                },
                "totalExchanger": {
                    "description": "Total number of exchanges",
                    "type": "integer"
                },
                "totalExchangerPledge": {
                    "description": "Total amount of exchanger pledge",
                    "type": "string"
                },
                "totalExchangerTx": {
                    "description": "Total number of exchanger  transactions",
                    "type": "integer"
                },
                "totalInternalTx": {
                    "description": "Total number of internal transactions",
                    "type": "integer"
                },
                "totalNFT": {
                    "description": "Total number of NFTs",
                    "type": "integer"
                },
                "totalNFTAmount": {
                    "description": "Total transaction volume of NFTs",
                    "type": "string"
                },
                "totalNFTCollection": {
                    "description": "Total number of NFT collections",
                    "type": "integer"
                },
                "totalNFTCreator": {
                    "description": "Total creator of NFTs",
                    "type": "integer"
                },
                "totalNFTTx": {
                    "description": "Total number of  NFT transactions",
                    "type": "integer"
                },
                "totalRecycle": {
                    "description": "Total number of recycle SNFT",
                    "type": "integer"
                },
                "totalSNFT": {
                    "description": "Total number of SNFTs",
                    "type": "integer"
                },
                "totalSNFTAmount": {
                    "description": "Total transaction volume of SNFTs",
                    "type": "string"
                },
                "totalSNFTCollection": {
                    "description": "Total number of SNFT collections",
                    "type": "integer"
                },
                "totalSNFTCreator": {
                    "description": "Total creator of SNFTs",
                    "type": "integer"
                },
                "totalSNFTPledge": {
                    "description": "Total amount of snft pledge",
                    "type": "string"
                },
                "totalSNFTTx": {
                    "description": "Total number of  SNFT transactions",
                    "type": "integer"
                },
                "totalTransaction": {
                    "description": "Total number of transactions",
                    "type": "integer"
                },
                "totalTransferTx": {
                    "description": "Total number of  transfer transactions",
                    "type": "integer"
                },
                "totalUncle": {
                    "description": "Number of total uncle blocks",
                    "type": "integer"
                },
                "totalValidator": {
                    "description": "Total number of validator",
                    "type": "integer"
                },
                "totalValidatorOnline": {
                    "description": "Total amount of validator online",
                    "type": "integer"
                },
                "totalValidatorPledge": {
                    "description": "Total amount of validator pledge",
                    "type": "string"
                },
                "totalWormholesTx": {
                    "description": "Total number of  wormholes transactions",
                    "type": "integer"
                }
            }
        },
        "model.Subscription": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "Email",
                    "type": "string"
                }
            }
        },
        "model.Validator": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "staking account",
                    "type": "string"
                },
                "amount": {
                    "description": "pledge amount",
                    "type": "string"
                },
                "last_number": {
                    "description": "The block number at latest rewarding",
                    "type": "integer"
                },
                "online": {
                    "description": "online",
                    "type": "boolean"
                },
                "proxy": {
                    "description": "proxy address",
                    "type": "string"
                },
                "reward": {
                    "description": "amount of total reward",
                    "type": "string"
                },
                "timestamp": {
                    "description": "The time at latest rewarding",
                    "type": "integer"
                }
            }
        },
        "service.AccountRes": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "address",
                    "type": "string"
                },
                "balance": {
                    "description": "The total amount of coins in the chain",
                    "type": "string"
                },
                "code": {
                    "description": "bytecode",
                    "type": "string"
                },
                "createdTx": {
                    "description": "create transaction",
                    "type": "string"
                },
                "creator": {
                    "description": "address",
                    "type": "string"
                },
                "exchangerAmount": {
                    "description": "exchanger pledge amount",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "nonce": {
                    "description": "transaction random number, transaction volume",
                    "type": "integer"
                },
                "rewardCoinCount": {
                    "description": "Number of times to get coin rewards, 0.1ERB once",
                    "type": "integer"
                },
                "rewardSNFTCount": {
                    "description": "Number of times to get SNFT rewards",
                    "type": "integer"
                },
                "snftAmount": {
                    "description": "account snft pledge amount",
                    "type": "string"
                },
                "symbol": {
                    "description": "symbol",
                    "type": "string"
                },
                "totalNFT": {
                    "description": "Number of NFTs held",
                    "type": "integer"
                },
                "totalSNFT": {
                    "description": "Number of SNFTs held",
                    "type": "integer"
                },
                "type": {
                    "description": "contract types, ERC20, ERC721, ERC1155",
                    "type": "integer"
                },
                "validatorAmount": {
                    "description": "validator pledge amount",
                    "type": "string"
                }
            }
        },
        "service.AccountsRes": {
            "type": "object",
            "properties": {
                "accounts": {
                    "description": "Account list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Account"
                    }
                },
                "balance": {
                    "description": "The total amount of coins in the chain",
                    "type": "string"
                },
                "total": {
                    "description": "Total number of accounts",
                    "type": "integer"
                }
            }
        },
        "service.Block": {
            "type": "object",
            "properties": {
                "difficulty": {
                    "type": "string"
                },
                "extraData": {
                    "type": "string"
                },
                "gasLimit": {
                    "type": "string"
                },
                "gasUsed": {
                    "type": "string"
                },
                "miner": {
                    "type": "string"
                },
                "mixHash": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "parentHash": {
                    "type": "string"
                },
                "receiptsRoot": {
                    "type": "string"
                },
                "sha3Uncles": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                },
                "stateRoot": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "transactionsRoot": {
                    "type": "string"
                },
                "tx_count": {
                    "type": "integer"
                }
            }
        },
        "service.BlocksRes": {
            "type": "object",
            "properties": {
                "blocks": {
                    "description": "block list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Block"
                    }
                },
                "total": {
                    "description": "The total number of blocks",
                    "type": "integer"
                }
            }
        },
        "service.CollectionsRes": {
            "type": "object",
            "properties": {
                "collections": {
                    "description": "NFT collection list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Collection"
                    }
                },
                "total": {
                    "description": "The total number of NFT collections",
                    "type": "integer"
                }
            }
        },
        "service.EpochsRes": {
            "type": "object",
            "properties": {
                "epochs": {
                    "description": "List of system NFT periods",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Epoch"
                    }
                },
                "total": {
                    "description": "The total number of NFT periods in the system",
                    "type": "integer"
                }
            }
        },
        "service.ErrRes": {
            "type": "object",
            "properties": {
                "err_str": {
                    "description": "Error message",
                    "type": "string"
                }
            }
        },
        "service.ExchangerRes": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "Exchange address",
                    "type": "string"
                },
                "amount": {
                    "description": "Pledge amount",
                    "type": "string"
                },
                "block_number": {
                    "description": "The block number when created",
                    "type": "integer"
                },
                "close_at": {
                    "description": "if not null, the exchange is closed",
                    "type": "integer"
                },
                "collectionCount": {
                    "description": "collection count",
                    "type": "integer"
                },
                "creator": {
                    "description": "Creator address",
                    "type": "string"
                },
                "fee_ratio": {
                    "description": "fee rate, unit 1/10,000",
                    "type": "integer"
                },
                "name": {
                    "description": "Exchange name",
                    "type": "string"
                },
                "nft_count": {
                    "description": "Total NFT count",
                    "type": "integer"
                },
                "reward": {
                    "description": "amount of total reward",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Open time",
                    "type": "integer"
                },
                "txCount": {
                    "description": "transaction count",
                    "type": "integer"
                },
                "tx_amount": {
                    "description": "Total transaction amount, unit wei",
                    "type": "string"
                },
                "tx_hash": {
                    "description": "The transaction created",
                    "type": "string"
                },
                "url": {
                    "description": "Exchange URL",
                    "type": "string"
                }
            }
        },
        "service.ExchangerTxCountRes": {
            "type": "object",
            "properties": {
                "day30": {
                    "type": "integer"
                },
                "day_1": {
                    "type": "integer"
                },
                "day_7": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "service.ExchangersRes": {
            "type": "object",
            "properties": {
                "exchangers": {
                    "description": "List of exchanges",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Exchanger"
                    }
                },
                "last_0_total": {
                    "description": "The number of newly opened exchanges in the latest 0 days (today), calculated in real time",
                    "type": "integer"
                },
                "last_1_total": {
                    "description": "Number of newly opened exchanges in the latest 1 day (yesterday), cached",
                    "type": "integer"
                },
                "last_7_total": {
                    "description": "Number of newly opened exchanges in the last 7 days, cached",
                    "type": "integer"
                },
                "total": {
                    "description": "Total number of exchanges",
                    "type": "integer"
                }
            }
        },
        "service.InternalTxsRes": {
            "type": "object",
            "properties": {
                "internal_txs": {
                    "description": "transaction list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.InternalTx"
                    }
                },
                "total": {
                    "description": "The total number",
                    "type": "integer"
                }
            }
        },
        "service.LineChartRes": {
            "type": "object",
            "properties": {
                "blocks": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "number": {
                                "type": "integer"
                            },
                            "txCount": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "exchangers": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "day": {
                                "type": "string"
                            },
                            "index": {
                                "type": "integer"
                            },
                            "num": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "txs": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "gasPrice": {
                                "type": "integer"
                            },
                            "hash": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "service.LocationRes": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "account address",
                    "type": "string"
                },
                "latitude": {
                    "description": "latitude",
                    "type": "number"
                },
                "longitude": {
                    "description": "longitude",
                    "type": "number"
                },
                "online": {
                    "description": "online status",
                    "type": "boolean"
                },
                "proxy": {
                    "description": "proxy address",
                    "type": "string"
                }
            }
        },
        "service.Log": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "topics": {
                    "type": "string"
                },
                "tx_hash": {
                    "type": "string"
                }
            }
        },
        "service.Msg": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "service.NFT": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "NFT address, grows automatically from 0x1",
                    "type": "string"
                },
                "attributes": {
                    "description": "Attributes",
                    "type": "string"
                },
                "block_number": {
                    "description": "The height of the created block",
                    "type": "integer"
                },
                "category": {
                    "description": "category",
                    "type": "string"
                },
                "collectionName": {
                    "type": "string"
                },
                "collection_id": {
                    "description": "The id of the collection, the name of the collection + the creator of the collection + the hash of the exchange where the collection is located",
                    "type": "string"
                },
                "creator": {
                    "description": "Creator address",
                    "type": "string"
                },
                "desc": {
                    "description": "description",
                    "type": "string"
                },
                "exchanger_addr": {
                    "description": "The address of the exchange, if there is none, it can be traded on any exchange",
                    "type": "string"
                },
                "last_price": {
                    "description": "The last transaction price (null if the transaction is not completed), the unit is wei",
                    "type": "string"
                },
                "meta_url": {
                    "description": "Real meta information URL",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "owner": {
                    "description": "owner",
                    "type": "string"
                },
                "raw_meta_url": {
                    "description": "Original meta information URL on the chain",
                    "type": "string"
                },
                "royalty_ratio": {
                    "description": "Royalty rate, in ten thousandths",
                    "type": "integer"
                },
                "source_url": {
                    "description": "Resource links, file links such as pictures or videos",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Create timestamp",
                    "type": "integer"
                },
                "tx_amount": {
                    "description": "the total transaction volume of this NFT",
                    "type": "string"
                },
                "tx_hash": {
                    "description": "The transaction hash created",
                    "type": "string"
                }
            }
        },
        "service.NFTChartRes": {
            "type": "object",
            "properties": {
                "hour": {
                    "description": "hour",
                    "type": "integer"
                },
                "num": {
                    "description": "number of nft",
                    "type": "integer"
                }
            }
        },
        "service.NFTTxsRes": {
            "type": "object",
            "properties": {
                "nft_txs": {
                    "description": "NFT transaction list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.NFTTx"
                    }
                },
                "total": {
                    "description": "The total number of NFTs",
                    "type": "integer"
                }
            }
        },
        "service.NFTsRes": {
            "type": "object",
            "properties": {
                "nfts": {
                    "description": "NFT list",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "address": {
                                "description": "NFT address, grows automatically from 0x1",
                                "type": "string"
                            },
                            "attributes": {
                                "description": "Attributes",
                                "type": "string"
                            },
                            "block_number": {
                                "description": "The height of the created block",
                                "type": "integer"
                            },
                            "category": {
                                "description": "category",
                                "type": "string"
                            },
                            "collectionName": {
                                "type": "string"
                            },
                            "collection_id": {
                                "description": "The id of the collection, the name of the collection + the creator of the collection + the hash of the exchange where the collection is located",
                                "type": "string"
                            },
                            "creator": {
                                "description": "Creator address",
                                "type": "string"
                            },
                            "desc": {
                                "description": "description",
                                "type": "string"
                            },
                            "exchanger_addr": {
                                "description": "The address of the exchange, if there is none, it can be traded on any exchange",
                                "type": "string"
                            },
                            "last_price": {
                                "description": "The last transaction price (null if the transaction is not completed), the unit is wei",
                                "type": "string"
                            },
                            "meta_url": {
                                "description": "Real meta information URL",
                                "type": "string"
                            },
                            "name": {
                                "description": "name",
                                "type": "string"
                            },
                            "owner": {
                                "description": "owner",
                                "type": "string"
                            },
                            "raw_meta_url": {
                                "description": "Original meta information URL on the chain",
                                "type": "string"
                            },
                            "royalty_ratio": {
                                "description": "Royalty rate, in ten thousandths",
                                "type": "integer"
                            },
                            "source_url": {
                                "description": "Resource links, file links such as pictures or videos",
                                "type": "string"
                            },
                            "timestamp": {
                                "description": "Create timestamp",
                                "type": "integer"
                            },
                            "tx_amount": {
                                "description": "the total transaction volume of this NFT",
                                "type": "string"
                            },
                            "tx_hash": {
                                "description": "The transaction hash created",
                                "type": "string"
                            }
                        }
                    }
                },
                "total": {
                    "description": "The total number of NFTs",
                    "type": "integer"
                }
            }
        },
        "service.RankingExchangerRes": {
            "type": "object",
            "properties": {
                "exchangers": {
                    "description": "Exchanger list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Exchanger"
                    }
                },
                "total": {
                    "description": "The total number of Exchanger",
                    "type": "integer"
                }
            }
        },
        "service.RankingNFTRes": {
            "type": "object",
            "properties": {
                "nfts": {
                    "description": "NFT list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.NFT"
                    }
                },
                "total": {
                    "description": "The total number of NFTs",
                    "type": "integer"
                }
            }
        },
        "service.RankingSNFTRes": {
            "type": "object",
            "properties": {
                "nfts": {
                    "description": "SNFT list",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "address": {
                                "description": "SNFT address",
                                "type": "string"
                            },
                            "attributes": {
                                "description": "Attributes",
                                "type": "string"
                            },
                            "category": {
                                "description": "category",
                                "type": "string"
                            },
                            "desc": {
                                "description": "description",
                                "type": "string"
                            },
                            "id": {
                                "description": "FNFT ID",
                                "type": "string"
                            },
                            "last_price": {
                                "description": "The last transaction price, the unit is wei, null if the transaction has not been completed",
                                "type": "string"
                            },
                            "meta_url": {
                                "description": "FNFT meta information URL",
                                "type": "string"
                            },
                            "name": {
                                "description": "name",
                                "type": "string"
                            },
                            "owner": {
                                "description": "owner, unallocated and reclaimed are null",
                                "type": "string"
                            },
                            "pieces": {
                                "description": "snft pieces number",
                                "type": "integer"
                            },
                            "pledge_number": {
                                "description": "The height of the last pledged block, null if not pledge",
                                "type": "integer"
                            },
                            "remove": {
                                "description": "SNFTs that are synthesized and then removed",
                                "type": "boolean"
                            },
                            "reward_at": {
                                "description": "The timestamp of the last rewarded, null if not rewarded",
                                "type": "integer"
                            },
                            "reward_number": {
                                "description": "The height of the last rewarded block",
                                "type": "integer"
                            },
                            "source_url": {
                                "description": "Resource links, file links such as pictures or videos",
                                "type": "string"
                            },
                            "tx_amount": {
                                "description": "the total transaction volume of this SNFT",
                                "type": "string"
                            }
                        }
                    }
                },
                "total": {
                    "description": "The total number of SNFTs",
                    "type": "integer"
                }
            }
        },
        "service.Reward": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "reward address",
                    "type": "string"
                },
                "amount": {
                    "description": "Amount of reward",
                    "type": "string"
                },
                "block_number": {
                    "description": "The block number when rewarding",
                    "type": "integer"
                },
                "collectionName": {
                    "type": "string"
                },
                "identity": {
                    "description": "Identity, 1: block producer, 2: verifier, 3, exchange",
                    "type": "integer"
                },
                "proxy": {
                    "description": "proxy address",
                    "type": "string"
                },
                "snft": {
                    "description": "SNFT address",
                    "type": "string"
                }
            }
        },
        "service.RewardsRes": {
            "type": "object",
            "properties": {
                "rewards": {
                    "description": "Rewards list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.Reward"
                    }
                },
                "total": {
                    "description": "The total number of rewards",
                    "type": "integer"
                }
            }
        },
        "service.SNFT": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "SNFT address",
                    "type": "string"
                },
                "attributes": {
                    "description": "Attributes",
                    "type": "string"
                },
                "category": {
                    "description": "category",
                    "type": "string"
                },
                "collectionName": {
                    "description": "collection name",
                    "type": "string"
                },
                "creator": {
                    "description": "creator address, also the address of royalty income",
                    "type": "string"
                },
                "desc": {
                    "description": "description",
                    "type": "string"
                },
                "exchanger": {
                    "description": "exchanger address",
                    "type": "string"
                },
                "id": {
                    "description": "FNFT ID",
                    "type": "string"
                },
                "last_price": {
                    "description": "The last transaction price, the unit is wei, null if the transaction has not been completed",
                    "type": "string"
                },
                "meta_url": {
                    "description": "FNFT meta information URL",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "owner": {
                    "description": "owner, unallocated and reclaimed are null",
                    "type": "string"
                },
                "pieces": {
                    "description": "snft pieces number",
                    "type": "integer"
                },
                "pledge_number": {
                    "description": "The height of the last pledged block, null if not pledge",
                    "type": "integer"
                },
                "remove": {
                    "description": "SNFTs that are synthesized and then removed",
                    "type": "boolean"
                },
                "reward_at": {
                    "description": "The timestamp of the last rewarded, null if not rewarded",
                    "type": "integer"
                },
                "reward_number": {
                    "description": "The height of the last rewarded block",
                    "type": "integer"
                },
                "royaltyRatio": {
                    "description": "the royalty rate of the same period of SNFT, the unit is one ten thousandth",
                    "type": "integer"
                },
                "source_url": {
                    "description": "Resource links, file links such as pictures or videos",
                    "type": "string"
                },
                "tx_amount": {
                    "description": "the total transaction volume of this SNFT",
                    "type": "string"
                }
            }
        },
        "service.SNFTGroupsRes": {
            "type": "object",
            "properties": {
                "collections": {
                    "description": "collection information",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "block_number": {
                                "description": "Create block height, equal to the first NFT in the collection",
                                "type": "integer"
                            },
                            "category": {
                                "description": "category",
                                "type": "string"
                            },
                            "creator": {
                                "description": "Creator",
                                "type": "string"
                            },
                            "desc": {
                                "description": "description",
                                "type": "string"
                            },
                            "exchanger": {
                                "description": "belongs to the exchange",
                                "type": "string"
                            },
                            "fullNFTs": {
                                "description": "16 FNFT messages",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "attributes": {
                                            "description": "Attributes",
                                            "type": "string"
                                        },
                                        "category": {
                                            "description": "category",
                                            "type": "string"
                                        },
                                        "desc": {
                                            "description": "description",
                                            "type": "string"
                                        },
                                        "id": {
                                            "description": "FNFT ID",
                                            "type": "string"
                                        },
                                        "meta_url": {
                                            "description": "FNFT meta information URL",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "name",
                                            "type": "string"
                                        },
                                        "source_url": {
                                            "description": "Resource links, file links such as pictures or videos",
                                            "type": "string"
                                        },
                                        "total_hold": {
                                            "description": "The number of SNFTs held in a FNFT",
                                            "type": "integer"
                                        }
                                    }
                                }
                            },
                            "id": {
                                "description": "ID",
                                "type": "string"
                            },
                            "img_url": {
                                "description": "image link",
                                "type": "string"
                            },
                            "meta_url": {
                                "description": "collection meta information URL",
                                "type": "string"
                            },
                            "name": {
                                "description": "name",
                                "type": "string"
                            },
                            "total_hold": {
                                "description": "The number of SNFTs held in a collection",
                                "type": "integer"
                            }
                        }
                    }
                },
                "total": {
                    "description": "The total number of SNFT collections",
                    "type": "integer"
                }
            }
        },
        "service.SNFTsAndMetaRes": {
            "type": "object",
            "properties": {
                "nfts": {
                    "description": "SNFT list",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "address": {
                                "description": "SNFT address",
                                "type": "string"
                            },
                            "attributes": {
                                "description": "Attributes",
                                "type": "string"
                            },
                            "category": {
                                "description": "category",
                                "type": "string"
                            },
                            "collectionName": {
                                "description": "collection name",
                                "type": "string"
                            },
                            "creator": {
                                "description": "creator address, also the address of royalty income",
                                "type": "string"
                            },
                            "desc": {
                                "description": "description",
                                "type": "string"
                            },
                            "exchanger": {
                                "description": "exchanger address",
                                "type": "string"
                            },
                            "id": {
                                "description": "FNFT ID",
                                "type": "string"
                            },
                            "last_price": {
                                "description": "The last transaction price, the unit is wei, null if the transaction has not been completed",
                                "type": "string"
                            },
                            "meta_url": {
                                "description": "FNFT meta information URL",
                                "type": "string"
                            },
                            "name": {
                                "description": "name",
                                "type": "string"
                            },
                            "owner": {
                                "description": "owner, unallocated and reclaimed are null",
                                "type": "string"
                            },
                            "pieces": {
                                "description": "snft pieces number",
                                "type": "integer"
                            },
                            "pledge_number": {
                                "description": "The height of the last pledged block, null if not pledge",
                                "type": "integer"
                            },
                            "remove": {
                                "description": "SNFTs that are synthesized and then removed",
                                "type": "boolean"
                            },
                            "reward_at": {
                                "description": "The timestamp of the last rewarded, null if not rewarded",
                                "type": "integer"
                            },
                            "reward_number": {
                                "description": "The height of the last rewarded block",
                                "type": "integer"
                            },
                            "source_url": {
                                "description": "Resource links, file links such as pictures or videos",
                                "type": "string"
                            },
                            "tx_amount": {
                                "description": "the total transaction volume of this SNFT",
                                "type": "string"
                            }
                        }
                    }
                },
                "total": {
                    "description": "The total number of SNFTs",
                    "type": "integer"
                }
            }
        },
        "service.SNFTsRes": {
            "type": "object",
            "properties": {
                "nfts": {
                    "description": "SNFT list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SNFT"
                    }
                },
                "total": {
                    "description": "The total number of SNFTs",
                    "type": "integer"
                }
            }
        },
        "service.Transaction": {
            "type": "object",
            "properties": {
                "blockHash": {
                    "type": "string"
                },
                "blockNumber": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "gas": {
                    "type": "string"
                },
                "gasPrice": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "input": {
                    "type": "string"
                },
                "internal_calls": {
                    "type": "string"
                },
                "internal_value_transfer": {
                    "type": "string"
                },
                "nonce": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                },
                "token_transfer": {
                    "type": "string"
                },
                "transactionIndex": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "service.TransactionRes": {
            "type": "object",
            "properties": {
                "blockHash": {
                    "description": "create transaction",
                    "type": "string"
                },
                "blockNumber": {
                    "description": "transaction random number, transaction volume",
                    "type": "integer"
                },
                "contractAddress": {
                    "description": "address",
                    "type": "string"
                },
                "cumulativeGasUsed": {
                    "description": "transaction random number, transaction volume",
                    "type": "integer"
                },
                "from": {
                    "description": "address",
                    "type": "string"
                },
                "gas": {
                    "description": "transaction random number, transaction volume",
                    "type": "integer"
                },
                "gasPrice": {
                    "description": "transaction random number, transaction volume",
                    "type": "integer"
                },
                "gasUsed": {
                    "description": "transaction random number, transaction volume",
                    "type": "integer"
                },
                "hash": {
                    "description": "create transaction",
                    "type": "string"
                },
                "input": {
                    "description": "Additional input data, contract call encoded data",
                    "type": "string"
                },
                "nonce": {
                    "description": "transaction random number, transaction volume",
                    "type": "integer"
                },
                "status": {
                    "description": "transaction random number, transaction volume",
                    "type": "integer"
                },
                "timestamp": {
                    "description": "The event stamp of the block it is in",
                    "type": "integer"
                },
                "to": {
                    "description": "address",
                    "type": "string"
                },
                "transactionIndex": {
                    "description": "transaction random number, transaction volume",
                    "type": "integer"
                },
                "value": {
                    "description": "The total amount of coins in the chain",
                    "type": "string"
                }
            }
        },
        "service.TransactionsRes": {
            "type": "object",
            "properties": {
                "total": {
                    "description": "The total number of transactions",
                    "type": "integer"
                },
                "transactions": {
                    "description": "transaction list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.TransactionRes"
                    }
                }
            }
        },
        "service.TxChartRes": {
            "type": "object",
            "properties": {
                "hour": {
                    "description": "hour",
                    "type": "integer"
                },
                "num": {
                    "description": "number of transaction",
                    "type": "integer"
                }
            }
        }
    }
}